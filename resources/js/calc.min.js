function updateDashboards(){if(!isLoading&&!isUpdating){setUpdatingStatus(!0),showUpdatingText();const e=new Date;let t=[];if(0==e.getMonth()&&e.getDate()>=10&&e.getDate<=20){const a=e.getFullYear()-1;t.push(getYearlyCategoryViews(a))}return t.push(getCardPerformanceForCurrMonth()),t.push(realTimeStatsCalls()),t.push(updateVideoAndCategoryStats()),reloadIntroAnimation(),Promise.all(t).then(e=>(console.log("Update Dashboards Complete",e),recordUpdate("Dashboards Updated"),hideUpdatingText(),setUpdatingStatus(!1),loadDashboards())).catch(e=>{recordUpdate("Update Failed");const t="Error occurred updating dashboards: ";console.error(t,e),recordError(e,t)}).finally(e=>{hideUpdatingText(),setUpdatingStatus(!1)})}}function updateVideoAndCategoryStats(){const e=getCategoryList(),t=getVideoList();return Promise.all([e,t]).then(e=>{e[0],e[1][0];const t=e[1][1];return getAllVideoStats(t)}).then(e=>getTopTenVideosForCurrMonth())}function getCategoryList(){return requestSpreadsheetData("Input Data","Category List").then(e=>{let t={};const a=getColumnHeaders(e);for(let o=1;o<e.length;o++){const r=e[o];let s=r[a["Category ID"]];const i=r[a["L1 Category"]],n=r[a["L2 Category"]],l=r[a["L3 Category"]];let d="";const c=r[a["Short Name"]];let h=!1;const u=!0;if(/\d/.test(s)){const e=s.match(/[A-Z]+/)[0];if(t[e].leaf=!1,d=t[e].name+"->"+n,""!=s.replace(/[A-Z]+[0-9]+/,"")){const e=s.match(/[A-Z]+[0-9]+/)[0];t[e].leaf=!1,d=t[e].name+"->"+l}}else h=!0,d=i;t[s]={shortName:c,name:d,root:h,leaf:u,views:0,likes:0,duration:0,videos:[],strength:0}}return lsSet("categoryTotals",t),t})}function getVideoList(){return requestSpreadsheetData("Input Data","Video List").then(e=>{let t={},a=[],o={};const r=e[0];for(let e=0;e<r.length;e++)o[r[e]]=e;for(let r=1;r<e.length;r++){const s=e[r],i="TRUE"===s[o.Organic],n=s[o["Video ID"]],l=s[o.Title],d=s[o["Publish Date"]],c=s[o.Duration];let h=s[o.Categories];const u=s[o["Created By"]],p=s[o.Privacy].toLowerCase();h=h.replace(/\s/g,"");const g=h.split(",");let m=[];for(let e=0;e<g.length;e++){let t=g[e];if(-1==m.indexOf(t)&&m.push(t),/\d/.test(t)){const e=t.match(/[A-Z]+/)[0];if(-1==m.indexOf(e)&&m.push(e),""!=t.replace(/[A-Z]+[0-9]+/,"")){const e=t.match(/[A-Z]+[0-9]+/)[0];-1==m.indexOf(e)&&m.push(e)}}}t[n]={categories:m,createdBy:u,duration:c,organic:i,privacy:p,publishDate:d,title:l},a.push(n)}return lsSet("statsByVideoId",t),lsSet("uploads",a),[t,a]})}function getCategoryStats(){return requestSpreadsheetData("Stats","Category Stats").then(e=>{const t=getColumnHeaders(e);let a=[];for(let o=1;o<e.length;o++){const r=e[o],s=r[t["Category ID"]],i=r[t.Name],n=r[t["Short Name"]],l=parseInt(r[t.Views]),d=parseInt(r[t.Likes]),c=parseInt(r[t["Duration (sec)"]]),h=parseFloat(r[t["Average Video Views"]]),u=parseFloat(r[t["Average Video Likes"]]),p=parseFloat(r[t["Average Video Duration"]]),g=parseFloat(r[t.Strength]),m=r[t.Videos],y=m.split(","),f="TRUE"===r[t.Root],v="TRUE"===r[t.Leaf];a.push({categoryId:s,name:i,shortName:n,views:l,likes:d,duration:c,avgViews:h,avgLikes:u,avgDuration:p,avgStrength:g,videos:y,root:f,leaf:v})}return lsSet("categoryStats",a),a})}function getVideoStats(){return requestSpreadsheetData("Stats","Video Stats").then(e=>{const t=getColumnHeaders(e);let a=[],o=[],r={};for(let s=1;s<e.length;s++){const i=e[s],n=i[t["Video ID"]],l=i[t.Title],d=parseInt(i[t.Views]),c=parseInt(i[t.Likes]),h=parseInt(i[t.Dislikes]),u=parseInt(i[t["Duration (sec)"]]),p=parseInt(i[t.Comments]),g=i[t["YouTube Publish Date"]].substr(0,10),m=i[t.Categories].replace(/\s/g,""),y=i[t["Created By"]],f="TRUE"===i[t.Organic],v=parseFloat(i[t.Strength]),V=parseInt(i[t["Average View Duration"]]),b=parseFloat(i[t["Average View Percentage"]]),S=parseFloat(i[t["Average Views Per Day"]]),D=parseInt(i[t["Days Since Published"]]),w=parseInt(i[t["Subscribers Gained"]]),I=parseFloat(i[t["Likes Per View"]]),C=parseFloat(i[t["Dislikes Per View"]]),P={videoId:n,views:d,likes:c,dislikes:h,comments:p,duration:u,strength:v,avgViewDuration:V,avgViewPercentage:b,avgViewsPerDay:S,daysSincePublished:D,subscribersGained:w,likesPerView:I,dislikesPerView:C};o.push(P),r[n]||(r[n]={}),r[n].title=l,r[n].publishDate=g,r[n].duration=u,r[n].categories=m,r[n].createdBy=y,r[n].organic=f,a.push(n)}lsSet("allVideoStats",o),lsSet("statsByVideoId",r),lsSet("uploads",a)})}function getBasicDashboardStats(){let e=[];return e.push(getCategoryStats()),e.push(getVideoStats()),e.push(getVideoStrengthWeights()),e.push(realTimeStatsCalls()),Promise.all(e)}function getVideoStrengthWeights(){return requestSpreadsheetData("Input Data","Video Strength Calculation").then(e=>{let t={},a=getColumnHeaders(e);for(let o=1;o<e.length;o++){const r=e[o];let s=r[a["Short Name"]],i=parseFloat(r[a.Weight]);t[s]=i}return lsSet("weights",t),Promise.resolve(t)})}function loadIntroAnimation(){const e=document.getElementById("intro-img"),t=document.getElementById("intro-video");if(4!=t.readyState&&t.load(),t.paused){const a=t.play();void 0!==a&&a.then(a=>{e.style.display="none",t.style.display="initial"}).catch(a=>{document.getElementsByTagName("VIDEO")[0].play(),e.style.display="none",t.style.display="initial"})}}function reloadIntroAnimation(){const e=document.getElementById("intro-img"),t=document.getElementById("intro-video"),a=document.getElementById("animation-container");e.style.display="",t.remove(),prependElement(a,t),loadIntroAnimation()}function loadPlatformDashboard(){const e=joinDate,t=getTodaysDate();let a=[];return a.push(requestChannelSearchTerms(e,t)),a.push(requestViewsByDeviceType(e,t)),a.push(requestViewsByTrafficSource(e,t)),a.push(requestViewsByState(e,t)),a.push(requestChannelDemographics(e,t)),a.push(requestWatchTimeBySubscribedStatus(e,t)),Promise.all(a).then(e=>(console.log("Platform Dashboard Calls Status:",e),"Displayed Platform Dashboard")).catch(e=>{const t="Error loading the Platform Dashboard: ";console.error(t,e),recordError(e,t)})}function loadChannelDemographics(){return requestSpreadsheetData("Stats","Channel Demographics").then(e=>{const t=JSON.parse(e[0][0]),a={result:{rows:t}};return displayChannelDemographics(a)}).catch(e=>{const t=getDashboardGraphIds("platform"),a=t.demographics;displayGraphError(a,e)})}function loadTopTenDashboard(){return requestSpreadsheetData("Stats","Top Ten Videos").then(e=>{const t=lsGet("statsByVideoId");let a="";for(let o=1;o<e.length;o++)for(let r=0;r<11;r++){const s=e[o];if(0==r)a+=`<div class="column-title"><h4>${s[r]}</h4></div>`;else{const i=s[r],n=numberWithCommas(parseInt(s[r+10])),l=numberWithCommas(parseInt(s[r+20]));let d="YouTube Video ID: "+i;if(t&&t[i]&&(d=t[i].title),d+=` | ${n} views & ${l} minutes watched`,a+=`\n              <div class="top-ten-thumbnail-holder column-thumbnail">\n                <a href="https://youtu.be/${i}" target="_blank"\n                    alt="${d}">\n                  <img class="top-ten-thumbnail"\n                      src="https://i.ytimg.com/vi/${i}/mqdefault.jpg" \n                      alt="thumbnail" title="${d}">`,1!=o){const t=r,s=e[o-1],n=s.indexOf(i);if(-1==n)a+='\n                  <span class="oi oi-arrow-thick-top arrow-green"></span>\n                  <span class="arrow-text-black">+</span>\n                ';else if(n!=t){const e=n-t;e<0?a+=`\n                    <span class="oi oi-arrow-thick-bottom arrow-red"></span>\n                    <span class="arrow-text-white">${Math.abs(e)}</span>\n                  `:e>0&&(a+=`\n                    <span class="oi oi-arrow-thick-top arrow-green"></span>\n                    <span class="arrow-text-black">${e}</span>\n                  `)}}a+="</a></div>"}}let o=document.getElementById("top-ten-thumbnail-container");o.innerHTML=a;let r=document.getElementById("top-ten-thumbnail-wrapper");return r.scrollLeft=r.scrollWidth,Promise.resolve("Displayed Top Ten Videos Dashboard")})}function loadUserFeedbackDashboard(){return requestSpreadsheetData("Input Data","User Feedback List").then(e=>{const t=lsGet("statsByVideoId");let a="";for(let o=1;o<e.length;o++){const r=e[o][0],s=e[o][1];let i="YouTube Video ID: "+r;t&&t[r]&&(i=t[r].title);const n=`\n          <div class="col-4">\n            <a href="https://youtu.be/${r}" target="_blank"\n                alt="${i}">\n              <img class="feedback-thumbnail" onload="thumbnailCheck($(this), true)"\n                  src="https://i.ytimg.com/vi/${r}/maxresdefault.jpg"\n                  alt="thumbnail" title="${i}">\n            </a>\n          </div>`,l=`\n          <div class="col-8">\n            <h1 class="feedback-text">"${s}"</h1>\n          </div>\n        `,d='<div class="col-12"><hr></div>';a+=o%2==0?l+n:n+l,o!=e.length-1&&(a+=d)}let o=document.getElementById("feedback-container");if(o.innerHTML=a,!autoScrollDivs.includes("feedback-wrapper")){const e=lsGet("settings");let t=-1,a=0;for(;-1==t&&a<=e.dashboards.length;){const o=e.dashboards[a];"top-ten"==o.name&&(t=o.scrollSpeed),a++}t=t<=0?0:Math.ceil(1e3/t),new AutoDivScroll("feedback-wrapper",t,1,1),autoScrollDivs.push("feedback-wrapper")}return Promise.resolve("Displayed User Feedback Dashboard")})}function loadCardPerformanceDashboard(){const e=getDashboardGraphIds("card-performance"),t=e.cardTeaser,a=e.card;return requestSpreadsheetData("Stats","Card Performance").then(e=>{e.shift();let o=[],r=[],s=[],i=[],n=[],l=e.length;const d=e[e.length-1];0==d[1]&&0==d[3]&&l--;for(let t=0;t<l;t++)o.push(e[t][0]),r.push(e[t][1]),s.push(100*e[t][2]),i.push(e[t][3]),n.push(100*e[t][4]);const c={x:o,y:r,type:"bar",hovertemplate:"%{y} Impressions<extra></extra>",name:"Card Impressions"},h={x:o,y:s,type:"scatter",hovertemplate:"%{y} Click Rate<extra></extra>",line:{width:4},name:"Card Click Rate",yaxis:"y2"},u={x:o,y:i,type:"bar",hovertemplate:"%{y:,g} Teaser Impressions<extra></extra>",name:"Card Teaser Impressions"},p={x:o,y:n,type:"scatter",hovertemplate:"%{y} Teaser Click Rate<extra></extra>",line:{width:4},name:"Card Teaser Click Rate",yaxis:"y2"},g=[c,h],m=[u,p],y=.4159,f=.9192,v=.9528,V=y*document.documentElement.clientHeight,b=f*document.documentElement.clientWidth,S=v*document.documentElement.clientWidth,D=Math.floor(.017*document.documentElement.clientHeight),w=Math.floor(.0094*document.documentElement.clientWidth),I=Math.floor(.013*document.documentElement.clientWidth),C=Math.floor(.0156*document.documentElement.clientWidth),P=Math.floor(.03*document.documentElement.clientWidth),k=Math.floor(.0104*document.documentElement.clientWidth),x={height:V,width:b,legend:{bgcolor:"#eeeeee",font:{size:D},x:1.1,y:.5},margin:{b:k,t:P},title:{font:{size:C},text:"Card Performance"},xaxis:{automargin:!0,fixedrange:!0,hoverformat:"%b %Y",tickformat:"%b<br>%Y",tickfont:{size:w},title:{font:{size:I},text:"Month"}},yaxis:{automargin:!0,fixedrange:!0,tickfont:{size:w},title:{font:{size:I},text:"Card Impressions"}},yaxis2:{automargin:!0,fixedrange:!0,showgrid:!1,tickfont:{size:w},title:{font:{size:I},text:"Card Click Rate"},overlaying:"y",side:"right",ticksuffix:"%",zeroline:!1}},E={scrollZoom:!1,displayModeBar:!1};let T=JSON.parse(JSON.stringify(x));T.title.text="Card Teaser Performance",T.yaxis.title.text="Card Teaser Impressions",T.width=S;let G=0;try{createGraph(t,m,T,E,y,f)}catch(e){G++,displayGraphError(t,e)}try{createGraph(a,g,x,E,y,f)}catch(e){G++,displayGraphError(a,e)}return G>0?Promise.resolve("Error Displaying Card Performance Dashboard"):Promise.resolve("Displayed Card Performance Dashboard")}).catch(e=>{displayGraphError(t,e),displayGraphError(a,e)})}function loadRealTimeStatsDashboard(){const e=gapi.auth2.getAuthInstance().isSignedIn.get();if(!e)return requestSpreadsheetData("Stats","Real Time Stats").then(e=>{let t={};const a=getColumnHeaders(e);for(let o=1;o<e.length;o++){const r=e[o],s=r[a["Time Range"]],i=r[a.Views],n=r[a["Estimated Minutes Watched"]],l=r[a["Average View Duration"]],d=r[a["Subscribers Gained"]];t[s]={views:parseInt(i),estimatedMinutesWatched:parseInt(n),averageViewDuration:parseInt(l),netSubscribersGained:parseInt(d)}}return lsSet("realTimeStats",t),displayRealTimeStats(t)});try{return displayRealTimeStats()}catch(e){return recordError(e),realTimeStatsCalls()}}function loadGraphsFromSheets(){return requestSpreadsheetData("Stats","Graph Data").then(e=>{let t=0;const a=getColumnHeaders(e);for(let o=1;o<e.length;o++){const r=e[o],s=r[a["Graph ID"]],i=JSON.parse(r[a.Data]),n=JSON.parse(r[a.Layout]),l=JSON.parse(r[a.Config]),d=parseFloat(r[a["Graph Height"]]),c=parseFloat(r[a["Graph Width"]]),h=JSON.parse(r[a.Automargin]);try{Plotly.newPlot(s,i,n,l),"None"!=h?recordGraphSize(s,d,c,h):recordGraphSize(s,d,c)}catch(e){console.error(e),recordError(e),displayGraphError(s),t++}}return Promise.resolve("Displayed Graphs From Sheets with "+t+" errors")})}function loadTopVideoStats(){return requestSpreadsheetData("Stats","Top Video Stats").then(e=>{const t=getColumnHeaders(e);let a={},o=[];for(let r=1;r<e.length;r++){const s=e[r],i=s[t["Video ID"]],n=s[t["Dashboard ID"]],l=s[t.Title],d=s[t.Duration],c=s[t["Publish Date"]],h=s[t.Thumbnail],u=s[t.Views],p=s[t["Subscribers Gained"]],g=s[t["Average View Duration"]],m=s[t["Estimated Minutes Watched"]],y=s[t.Comments],f=parseInt(s[t.Likes]),v=parseInt(s[t.Dislikes]);try{document.getElementById(n+"-title").innerHTML=l,document.getElementById(n+"-duration").innerHTML="Duration: "+secondsToDuration(d),document.getElementById(n+"-duration-seconds").innerHTML=d,document.getElementById(n+"-publish-date").innerHTML="Published: "+c,document.getElementById(n+"-thumbnail").innerHTML=h;const e=[i,u,y,f,v,m,g,p,0];o.push(e),a[i]=n}catch(e){const t=`Dashboard "${n}" does not exist - `;console.error(t,e),recordError(e,t)}}const r={result:{rows:o}};return displayVideoBasicStats(r,a),Promise.resolve("Displayed Top Video Dashboards")})}function loadCategoryCharts(){return requestSpreadsheetData("Stats","Category Views By Year").then(e=>{const t=recordYearlyCategoryViews(e);return displayCategoryViewsAreaCharts(t)}).catch(e=>{recordError(e);const t=getDashboardGraphIds("categoryGraphs");t.forEach(e=>{displayGraphError(e)})})}function loadProductCategoriesDashboard(){return displayTopCategoriesGraphOne(),displayTopCategoriesGraphTwo(),displayTopCategoriesGraphThree(),Promise.resolve("Displayed Product Categories Dashboard")}function loadThumbnailDashboard(){const e=gapi.auth2.getAuthInstance().isSignedIn.get();if(e){const e=displayUploadThumbnails(),t={part:"statistics",forUsername:"automationdirect"},a=gapi.client.youtube.channels.list(t).then(e=>{const t=e.result.items[0].statistics.videoCount;document.getElementById("num-videos").innerText=t}).catch(e=>{const t="Unable to get number of channel videos: ";console.error(t,e),recordError(e,t)});return Promise.all([a,e])}return displayUploadThumbnails()}function loadTopVideoDashboards(){const e=document.getElementsByClassName("carousel-inner")[0],t=getTodaysDate();let a=[],o={};if(e.children["top-video-1"]){const e=getTopVideoByCategory("B","views")[0];null!=e&&(o[e]="top-video-1",a.push(e))}if(e.children["top-video-2"]){const e=getTopVideoByCategory("C","views")[0];null!=e&&(o[e]="top-video-2",a.push(e))}if(e.children["top-video-3"]){const e=getTopVideoByCategory("D","views")[0];null!=e&&(o[e]="top-video-3",a.push(e))}if(e.children["top-video-4"]){const e=getTopVideoByCategory("F","views")[0];null!=e&&(o[e]="top-video-4",a.push(e))}if(e.children["top-video-5"]){const e=getTopVideoByCategory("H","views")[0];null!=e&&(o[e]="top-video-5",a.push(e))}if(e.children["top-video-6"]){const e=getTopVideoByCategory("I","views")[0];null!=e&&(o[e]="top-video-6",a.push(e))}if(0==a.length)return null;const r=a.join(",");return topVideoCalls(joinDate,t,r,o)}function loadVideoStrengthDashboard(){const e=lsGet("statsByVideoId"),t=lsGet("allVideoStats");t.sort(function(e,t){return e.strength==t.strength?t.totalStrength-e.totalStrength:t.strength-e.strength});let a=20,o="",r=[],s=0,i=0;for(;s<t.length&&i<a;){const n=t[s],l=n.videoId,d=e[l].organic;if(d){i++;const t=Math.round(100*n.strength)/100;let s="YouTube Video ID: "+l,d=`video-strength-bars-${i}`;r.push({videoStats:n,graphId:d}),e&&e[l]&&(s=e[l].title),o+=`\n        <div class="col-1">\n          <h1 style="font-size:5rem;">${i}.</h1>\n        </div>\n        <div class="col-3">\n          <a href="https://youtu.be/${l}" target="_blank"\n              alt="${s}">\n            <img class="feedback-thumbnail"\n                onload="thumbnailCheck($(this), true)"\n                src="https://i.ytimg.com/vi/${l}/maxresdefault.jpg"\n                alt="thumbnail" title="${s}">\n          </a>\n        </div>\n        <div class="col-4">\n          <h1 class="video-strength-title">${s}</h1>\n          <br>\n          <h2 class="video-strength-value">Strength: ${t}</h2>\n        </div>\n        <div class="col-4">\n          <div class="h-100 w-100 graph-container" id="${d}"></div>\n        </div>\n      `;const c='\n        <div class="col-12">\n          <hr style="border-top:0.25rem solid rgba(0,0,0,.3);">\n        </div>\n      ';i!=a-1&&(o+=c)}s++}let n=document.getElementById("video-strength-container");if(n.innerHTML=o,!autoScrollDivs.includes("video-strength-wrapper")){let e=lsGet("settings"),t=-1,a=0;for(;-1==t&&a<=e.dashboards.length;){let o=e.dashboards[a];"video-strength"==o.name&&(t=o.scrollSpeed),a++}t=t<=0?0:Math.ceil(1e3/t),new AutoDivScroll("video-strength-wrapper",t,1,1),autoScrollDivs.push("video-strength-wrapper")}if(gapi.auth2.getAuthInstance().isSignedIn.get())if(void 0===t[0].z)reloadVideoStrengthDashboard();else for(let e=0;e<r.length;e++){const t=r[e];displayVideoStrengthBars(t.videoStats,t.graphId)}}function reloadVideoStrengthDashboard(){return getVideoStrengthWeights().then(e=>{try{const t=lsGet("allVideoStats");let a=calcVideoStrength(t,e);lsSet("allVideoStats",a),loadVideoStrengthDashboard()}catch(e){const t="Unable to recalculate video strengths";return console.error(t,e),recordError(e,t),t}})}function loadVideographerDashboards(){try{let e=calcVideographerStats();displayVideographerMonthlyVideos(e),getVideographerAvgViews(e,getDateFromDaysAgo(34),getDateFromDaysAgo(4)).then(e=>{displayVideographerAvgViews(e)}).catch(e=>{const t=getDashboardGraphIds("videographerGraphs").avgViews;for(const e in t)if(t.hasOwnProperty(e)){const a=t[e];displayGraphError(a)}recordError(e,"Unable to display videographer average views graphs")})}catch(e){const t=[getDashboardGraphIds("videographerGraphs").avgViews,getDashboardGraphIds("videographerGraphs").monthlyVideos];t.forEach(e=>{for(const t in e)if(e.hasOwnProperty(t)){const a=e[t];displayGraphError(a)}}),recordError(e,"Unable to load videographer dashboards")}}function average(e){const t=e.reduce((e,t)=>e+t,0),a=t/e.length;return a}function standardDeviation(e,t){const a=e.map(e=>{const a=e-t,o=a**2;return o}),o=average(a),r=Math.sqrt(o);return r}function zScore(e,t,a){let o=e-t,r=o/a;return r}function zScoreForList(e){let t=average(e),a=standardDeviation(e,t),o=e.map(e=>zScore(e,t,a));return o}function zScoreByPropertyName(e,t){let a=e.map(e=>e[t]),o=zScoreForList(a),r=o.map(e=>e>4?4:e<-4?-4:e);return r}function calcVideoStrength(e,t){let a={videoIds:e.map(e=>e.videoId),views:zScoreByPropertyName(e,"views"),avgViewsPerDay:zScoreByPropertyName(e,"avgViewsPerDay"),duration:zScoreByPropertyName(e,"duration"),comments:zScoreByPropertyName(e,"comments"),likesPerView:zScoreByPropertyName(e,"likesPerView"),dislikesPerView:zScoreByPropertyName(e,"dislikesPerView"),subscribersGained:zScoreByPropertyName(e,"subscribersGained"),avgViewDuration:zScoreByPropertyName(e,"avgViewDuration"),avgViewPercentage:zScoreByPropertyName(e,"avgViewPercentage"),daysSincePublished:zScoreByPropertyName(e,"daysSincePublished")};for(let o=0;o<a.videoIds.length;o++){a.videoIds[o];const r=a.views[o],s=a.avgViewsPerDay[o],i=a.duration[o],n=a.comments[o],l=a.likesPerView[o],d=a.dislikesPerView[o],c=a.subscribersGained[o],h=a.avgViewDuration[o],u=a.avgViewPercentage[o],p=a.daysSincePublished[o];let g=0;for(const e in t)if(t.hasOwnProperty(e)){const r=t[e];g+=r*a[e][o]}e[o].totalStrength=g,e[o].z={views:r,avgViewsPerDay:s,duration:i,comments:n,likesPerView:l,dislikesPerView:d,subscribersGained:c,avgViewDuration:h,avgViewPercentage:u,daysSincePublished:p}}e.sort(function(e,t){return e.totalStrength-t.totalStrength});let o=zScoreByPropertyName(e,"totalStrength"),r=o.length,s=Math.floor(0*r),i=Math.floor(r-1),n=o[s],l=o[i]-n;0==l&&(l=1);for(let t=0;t<e.length;t++){let a=o[t],r=(a-n)/l*100;e[t].strength=r}return e}function calcVideographerStats(){const e=lsGet("allVideoStats"),t=lsGet("statsByVideoId");let a={};for(let o=0;o<e.length;o++){const r=e[o],s=r.videoId,i=t[s].createdBy,n=t[s].organic;a[i]||(a[i]={all:{totalComments:0,totalDislikes:0,totalDuration:0,totalLikeRatio:0,totalLikes:0,totalSubsGained:0,totalViews:0,videos:[]},organic:{totalComments:0,totalDislikes:0,totalDuration:0,totalLikeRatio:0,totalLikes:0,totalSubsGained:0,totalViews:0,videos:[]},notOrganic:{totalComments:0,totalDislikes:0,totalDuration:0,totalLikeRatio:0,totalLikes:0,totalSubsGained:0,totalViews:0,videos:[]}});let l=[a[i].all];n?l.push(a[i].organic):l.push(a[i].notOrganic);const d=r.comments,c=r.dislikes,h=r.duration,u=r.likes/(r.likes+r.dislikes),p=r.likes,g=r.subscribersGained,m=r.views;l.forEach(e=>{e.totalComments+=d,e.totalDislikes+=c,e.totalDuration+=h,isNaN(u)||(e.totalLikeRatio+=u),e.totalLikes+=p,e.totalSubsGained+=g,e.totalViews+=m,e.videos.push(s)})}for(const e in a)if(a.hasOwnProperty(e)){const t=a[e];for(const e in t)if(t.hasOwnProperty(e)){const a=t[e];let o=a.videos.length;0==o&&(o=1),a.avgComments=a.totalComments/o,a.avgDislikes=a.totalDislikes/o,a.avgDuration=a.totalDuration/o,a.avgLikeRatio=a.totalLikeRatio/o,a.avgLikes=a.totalLikes/o,a.avgSubsGained=a.totalSubsGained/o,a.avgViews=a.totalViews/o;let r=a.avgLikes/(a.avgLikes+a.avgDislikes);isNaN(r)&&(r=void 0),a.cumLikeRatio=r}}return a=calcVideographerVideosByMonth(a),lsSet("videographers",a),a}function calcVideographerVideosByMonth(e){const t=lsGet("statsByVideoId");for(const a in e)if(e.hasOwnProperty(a)){const o=e[a];for(const e in o)if(o.hasOwnProperty(e)){const a=o[e];let r={};const s=a.videos;s.forEach(e=>{const a=t[e].publishDate,o=a.substr(0,7);null==r[o]&&(r[o]=0),r[o]+=1});const i=getMonthsSince(2010,7);i.forEach(e=>{null==r[e]&&(r[e]=0)}),a.monthlyVideos=r}}return e}function displayVideographerMonthlyVideos(e){e=e||lsGet("videographers");const t=["Shane C","Rick F","Tim W"],a=[getDashboardGraphIds("videographerGraphs").cumulativeVideos,getDashboardGraphIds("videographerGraphs").monthlyVideos],o={all:{cumulative:{graphId:a[0].all,title:"Cumulative Videos By Videographer (All Videos)"},monthly:{graphId:a[1].all,title:"Monthly Videos By Videographer (All Videos)"}},organic:{cumulative:{graphId:a[0].organic,title:"Cumulative Videos By Videographer (Organic Videos)"},monthly:{graphId:a[1].organic,title:"Monthly Videos By Videographer (Organic Videos)"}},notOrganic:{cumulative:{graphId:a[0].notOrganic,title:"Cumulative Videos By Videographer (Not Organic Videos)"},monthly:{graphId:a[1].notOrganic,title:"Monthly Videos By Videographer (Not Organic Videos)"}}};for(const a in o)if(o.hasOwnProperty(a)){const r=o[a].cumulative.title,s=o[a].cumulative.graphId,i=o[a].monthly.title,n=o[a].monthly.graphId;let l=[],d=[];t.forEach(t=>{const o=e[t][a],r=o.monthlyVideos;let s=[];for(const e in r)if(r.hasOwnProperty(e)){const t=r[e];s.push({month:e,numVideos:t})}s.sort(function(e,t){return e.month>t.month?1:e.month==t.month?0:-1});let i=[],n=[],c=[],h=0,u=[],p=[];s.forEach(e=>{h+=e.numVideos,i.push(e.month),n.push(h),c.push(e.numVideos);let t=[];1==e.numVideos?(t.push("1 new video"),p.push("1 video")):(t.push(`${e.numVideos} new videos`),p.push(`${e.numVideos} videos`)),1==h?t.push("1 video total"):t.push(`${h} videos total`),u.push(t)});let g={x:i,y:n,name:t,customdata:u,stackgroup:"one",hovertemplate:"%{customdata[0]} in %{x}<br>%{customdata[1]}<extra>"+t+"</extra>"},m={x:i,y:c,name:t,customdata:p,stackgroup:"one",groupnorm:"percent",hovertemplate:"%{y:.0f}% of total videos<br>%{customdata}<extra>"+t+"</extra>"};l.push(g),d.push(m)});const c=.8583,h=.9528,u=c*document.documentElement.clientHeight,p=h*document.documentElement.clientWidth,g=Math.floor(.0208*document.documentElement.clientWidth),m=Math.floor(.01*document.documentElement.clientWidth),y=Math.floor(.0156*document.documentElement.clientWidth),f=Math.floor(.0104*document.documentElement.clientWidth),v=Math.floor(.03*document.documentElement.clientWidth),V=Math.floor(.0104*document.documentElement.clientWidth),b={height:u,width:p,hoverlabel:{font:{size:f},namelength:-1},legend:{bgcolor:"#eeeeee",font:{size:m},y:.5},margin:{b:V,t:v},paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",title:{font:{size:g},text:r},xaxis:{automargin:!0,fixedrange:!0,tickfont:{size:f},title:{font:{size:y},text:"Month"}},yaxis:{automargin:!0,fixedrange:!0,tickfont:{size:f},title:{font:{size:y},text:"Cumulative Videos Created"}}};let S=JSON.parse(JSON.stringify(b));S.title.text=i,S.yaxis.ticksuffix="%",S.yaxis.title.text="Percentage of Videos Created";const D={scrollZoom:!1,displayModeBar:!1};try{createGraph(s,l,b,D,c,h)}catch(e){displayGraphError(s,e)}try{createGraph(n,d,S,D,c,h)}catch(e){displayGraphError(n,e)}}}function displayVideographerAvgViews(e){e=e||lsGet("videographers");const t=getDashboardGraphIds("videographerGraphs").avgViews,a={all:{graphId:t.all,title:"Average Views Per Video By Videographer (All Videos)"},organic:{graphId:t.organic,title:"Average Views Per Video By Videographer (Organic Videos)"},notOrganic:{graphId:t.notOrganic,title:"Average Views Per Video By Videographer (Not Organic Videos)"}};for(const t in a)if(a.hasOwnProperty(t)){const o=a[t].title,r=a[t].graphId,s=.8583,i=.9528,n=s*document.documentElement.clientHeight,l=i*document.documentElement.clientWidth,d=Math.floor(.0208*document.documentElement.clientWidth),c=Math.floor(.0128*document.documentElement.clientWidth),h=Math.floor(.0156*document.documentElement.clientWidth),u=Math.floor(.0156*document.documentElement.clientWidth),p=Math.floor(.0128*document.documentElement.clientWidth),g=Math.floor(.03*document.documentElement.clientWidth),m=Math.floor(.0104*document.documentElement.clientWidth);let y=[],f=[];const v=["Shane C","Rick F","Tim W"];v.forEach(a=>{const o=e[a][t],r=Math.round(o.avgViews),s=Math.round(o.lastXDaysAvgViews);y.push(r),f.push(s)});const V={x:v,y:y,name:"All Time",offsetgroup:1,textfont:{size:u},textposition:"auto",texttemplate:"~%{y:,}<br>views",type:"bar",yaxis:"y"};let b=JSON.parse(JSON.stringify(V));b.y=f,b.name="Last 30 Days",b.offsetgroup=2,b.yaxis="y2";let S=[V,b];const D={height:n,width:l,barmode:"group",hovermode:!1,legend:{bgcolor:"#eeeeee",font:{size:c},x:1.1,xanchor:"left",y:.5},margin:{b:m,t:g},paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",title:{font:{size:d},text:o},xaxis:{automargin:!0,fixedrange:!0,tickfont:{size:p},title:{font:{size:h},text:"Videographers"}},yaxis:{automargin:!0,fixedrange:!0,tickfont:{size:p},title:{font:{size:h},text:"Average Views Per Video (All Time)"}},yaxis2:{automargin:!0,fixedrange:!0,showgrid:!1,overlaying:"y",side:"right",zeroline:!1,tickfont:{size:p},title:{font:{size:h},text:"Average Views Per Video (Last 30 Days)"}}},w={scrollZoom:!1,displayModeBar:!1,staticPlot:!0,responsive:!0};try{createGraph(r,S,D,w,s,i)}catch(e){displayGraphError(r,e)}}}