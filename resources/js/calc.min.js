function updateVideoAndCategoryStats(){const e=getCategoryList(),t=getVideoList();return Promise.all([e,t]).then(e=>{e[0],e[1][0];const t=e[1][1];return getAllVideoStats(t)}).then(e=>getTopTenVideosForCurrMonth())}function getCategoryList(){return requestSpreadsheetData("Input Data","Category List").then(e=>{let t={};const r=getColumnHeaders(e);for(let a=1;a<e.length;a++){const o=e[a];let s=o[r["Category ID"]];const n=o[r["L1 Category"]],i=o[r["L2 Category"]],l=o[r["L3 Category"]];let d="";const c=o[r["Short Name"]];let h=!1;const u=!0;if(/\d/.test(s)){const e=s.match(/[A-Z]+/)[0];if(t[e].leaf=!1,d=t[e].name+"->"+i,""!=s.replace(/[A-Z]+[0-9]+/,"")){const e=s.match(/[A-Z]+[0-9]+/)[0];t[e].leaf=!1,d=t[e].name+"->"+l}}else h=!0,d=n;t[s]={shortName:c,name:d,root:h,leaf:u,views:0,likes:0,duration:0,videos:[],videosWithStrength:[],strength:0}}return lsSet("categoryTotals",t),t})}function getVideoList(){return requestSpreadsheetData("Input Data","Video List").then(e=>{let t={},r=[],a={};const o=e[0];for(let e=0;e<o.length;e++)a[o[e]]=e;for(let o=1;o<e.length;o++){const s=e[o],n="TRUE"===s[a.Organic],i=s[a["Video ID"]],l=s[a.Title],d=s[a["Publish Date"]],c=s[a.Duration];let h=s[a.Categories];const u=s[a["Created By"]]||"Unknown",g=s[a.Privacy].toLowerCase();h=h.replace(/\s/g,"");const p=h.split(",");let m=[];for(let e=0;e<p.length;e++){let t=p[e];if(-1==m.indexOf(t)&&m.push(t),/\d/.test(t)){const e=t.match(/[A-Z]+/)[0];if(-1==m.indexOf(e)&&m.push(e),""!=t.replace(/[A-Z]+[0-9]+/,"")){const e=t.match(/[A-Z]+[0-9]+/)[0];-1==m.indexOf(e)&&m.push(e)}}}t[i]={categories:m,createdBy:u,duration:c,organic:n,privacy:g,publishDate:d,title:l},r.push(i)}return lsSet("statsByVideoId",t),lsSet("uploads",r),[t,r]})}function getCategoryStats(){return requestSpreadsheetData("Stats","Category Stats").then(e=>{const t=getColumnHeaders(e);let r=[];for(let a=1;a<e.length;a++){const o=e[a],s=o[t["Category ID"]],n=o[t.Name],i=o[t["Short Name"]],l=parseInt(o[t.Views]),d=parseInt(o[t.Likes]),c=parseInt(o[t["Duration (sec)"]]),h=parseFloat(o[t["Average Video Views"]]),u=parseFloat(o[t["Average Video Likes"]]),g=parseFloat(o[t["Average Video Duration"]]),p=parseFloat(o[t.Strength]),m=o[t.Videos],y=m.split(","),v=o[t["Videos With Strength"]],f=v.split(","),S="TRUE"===o[t.Root],b="TRUE"===o[t.Leaf];r.push({categoryId:s,name:n,shortName:i,views:l,likes:d,duration:c,avgViews:h,avgLikes:u,avgDuration:g,avgStrength:p,videos:y,videosWithStrength:f,root:S,leaf:b})}return lsSet("categoryStats",r),r})}function getVideoStats(){return requestSpreadsheetData("Stats","Video Stats").then(e=>{const t=getColumnHeaders(e);let r=[],a=[],o={};for(let s=1;s<e.length;s++){const n=e[s],i=n[t["Video ID"]],l=n[t.Title],d=parseInt(n[t.Views]),c=parseInt(n[t.Likes]),h=parseInt(n[t.Dislikes]),u=parseInt(n[t["Duration (sec)"]]),g=parseInt(n[t.Comments]),p=n[t["YouTube Publish Date"]].substr(0,10),m=n[t.Categories].replace(/\s/g,""),y=n[t["Created By"]],v="TRUE"===n[t.Organic],f=parseFloat(n[t.Strength]),S=parseInt(n[t["Average View Duration"]]),b=parseFloat(n[t["Average View Percentage"]]),D=parseFloat(n[t["Average Views Per Day"]]),w=parseInt(n[t["Days Since Published"]]),V=parseInt(n[t["Subscribers Gained"]]),I=parseFloat(n[t["Likes Per View"]]),C=parseFloat(n[t["Dislikes Per View"]]),P={videoId:i,views:d,likes:c,dislikes:h,comments:g,duration:u,strength:f,avgViewDuration:S,avgViewPercentage:b,avgViewsPerDay:D,daysSincePublished:w,subscribersGained:V,likesPerView:I,dislikesPerView:C,organic:v};a.push(P),o[i]||(o[i]={}),o[i].title=l,o[i].publishDate=p,o[i].duration=u,o[i].categories=m,o[i].createdBy=y,o[i].organic=v,r.push(i)}lsSet("allVideoStats",a),lsSet("statsByVideoId",o),lsSet("uploads",r)})}function getBasicDashboardStats(){let e=[];return e.push(getCategoryStats()),e.push(getVideoStats()),e.push(getVideoStrengthWeights()),Promise.all(e)}function getVideoStrengthWeights(){return requestSpreadsheetData("Input Data","Video Strength Calculation").then(e=>{let t={},r={},a=getColumnHeaders(e),o=1,s=e[o];for(;o<e.length&&0!=s.length;){let r=s[a["Short Name"]],n=parseFloat(s[a.Weight]);t[r]=n,o++,s=e[o]}for(o++;o<e.length;){s=e[o];let t=s[a["Short Name"]],n=parseFloat(s[a.Weight]);r[t]=n,o++}return r.weights=t,lsSet("strengthCalc",r),Promise.resolve(r)})}function loadIntroAnimation(){const e=document.getElementById("intro-img"),t=document.getElementById("intro-video");if(4!=t.readyState&&t.load(),t.paused){const r=t.play();void 0!==r&&r.then(r=>{e.style.display="none",t.style.display="initial"}).catch(r=>{document.getElementsByTagName("VIDEO")[0].play(),e.style.display="none",t.style.display="initial"})}}function reloadIntroAnimation(){const e=document.getElementById("intro-img"),t=document.getElementById("intro-video");t.style.display="none";const r=document.createElement("div"),a=document.getElementById("animation-container");e.style.display="",t.remove(),prependElement(a,r),r.outerHTML=t.outerHTML,loadIntroAnimation()}function loadPlatformDashboard(){const e=joinDate,t=getTodaysDate();let r=[];return r.push(requestChannelSearchTerms(e,t)),r.push(requestViewsByDeviceType(e,t)),r.push(requestViewsByTrafficSource(e,t)),r.push(requestViewsByState(e,t)),r.push(requestChannelDemographics(e,t)),r.push(requestWatchTimeBySubscribedStatus(e,t)),Promise.all(r).then(e=>(console.log("Platform Dashboard Calls Status:",e),"Displayed Platform Dashboard")).catch(e=>{const t="Error loading the Platform Dashboard: ";console.error(t,e),recordError(e,t)})}function loadChannelDemographics(){return requestSpreadsheetData("Stats","Channel Demographics").then(e=>{const t=JSON.parse(e[0][0]),r={result:{rows:t}};return displayChannelDemographics(r)})}function loadTopTenDashboard(){return requestSpreadsheetData("Stats","Top Ten Videos").then(e=>{const t=lsGet("statsByVideoId");let r="";for(let a=1;a<e.length;a++)for(let o=0;o<11;o++){const s=e[a];if(0==o)r+=`<div class="column-title"><h4>${s[o]}</h4></div>`;else{const n=s[o],i=numberWithCommas(parseInt(s[o+10])),l=numberWithCommas(parseInt(s[o+20]));let d="YouTube Video ID: "+n;if(t&&t[n]&&(d=t[n].title),d+=` | ${i} views & ${l} minutes watched`,r+=`\n              <div class="top-ten-thumbnail-holder column-thumbnail">\n                <a href="https://youtu.be/${n}" target="_blank"\n                    alt="${d}">\n                  <img class="top-ten-thumbnail"\n                      src="https://i.ytimg.com/vi/${n}/mqdefault.jpg" \n                      alt="thumbnail" title="${d}">`,1!=a){const t=o,s=e[a-1],i=s.indexOf(n);if(-1==i)r+='\n                  <span class="oi oi-arrow-thick-top arrow-green"></span>\n                  <span class="arrow-text-black">+</span>\n                ';else if(i!=t){const e=i-t;e<0?r+=`\n                    <span class="oi oi-arrow-thick-bottom arrow-red"></span>\n                    <span class="arrow-text-white">${Math.abs(e)}</span>\n                  `:e>0&&(r+=`\n                    <span class="oi oi-arrow-thick-top arrow-green"></span>\n                    <span class="arrow-text-black">${e}</span>\n                  `)}}r+="</a></div>"}}let a=document.getElementById("top-ten-thumbnail-container");a.innerHTML=r;let o=document.getElementById("top-ten-thumbnail-wrapper");return o.scrollLeft=o.scrollWidth,Promise.resolve("Displayed Top Ten Videos Dashboard")})}function loadUserFeedbackDashboard(){return requestSpreadsheetData("Input Data","User Feedback List").then(e=>{const t=lsGet("statsByVideoId");let r="";for(let a=1;a<e.length;a++){const o=e[a][0],s=e[a][1];let n="YouTube Video ID: "+o;t&&t[o]&&(n=t[o].title);const i=`\n          <div class="col-4">\n            <a href="https://youtu.be/${o}" target="_blank"\n                alt="${n}">\n              <img class="feedback-thumbnail" onload="thumbnailCheck($(this), true)"\n                  src="https://i.ytimg.com/vi/${o}/maxresdefault.jpg"\n                  alt="thumbnail" title="${n}">\n            </a>\n          </div>`,l=`\n          <div class="col-8">\n            <h1 class="feedback-text">"${s}"</h1>\n          </div>\n        `,d='<div class="col-12"><hr></div>';r+=a%2==0?l+i:i+l,a!=e.length-1&&(r+=d)}let a=document.getElementById("feedback-container");if(a.innerHTML=r,!autoScrollDivs.includes("feedback-wrapper")){const e=lsGet("settings");let t=-1,r=0;for(;-1==t&&r<=e.dashboards.length;){const a=e.dashboards[r];"top-ten"==a.name&&(t=a.scrollSpeed),r++}t=t<=0?0:Math.ceil(1e3/t),new AutoDivScroll("feedback-wrapper",t,1,1),autoScrollDivs.push("feedback-wrapper")}return Promise.resolve("Displayed User Feedback Dashboard")})}function loadCardPerformanceDashboard(){const e=getDashboardGraphIds("card-performance"),t=e.cardTeaser,r=e.card;return requestSpreadsheetData("Stats","Card Performance").then(e=>{e.shift();let a=[],o=[],s=[],n=[],i=[],l=e.length;const d=e[e.length-1];0==d[1]&&0==d[3]&&l--;for(let t=0;t<l;t++)a.push(e[t][0]),o.push(e[t][1]),s.push(100*e[t][2]),n.push(e[t][3]),i.push(100*e[t][4]);const c={x:a,y:o,type:"bar",hovertemplate:"%{y} Impressions<extra></extra>",name:"Card Impressions"},h={x:a,y:s,type:"scatter",hovertemplate:"%{y} Click Rate<extra></extra>",line:{width:4},name:"Card Click Rate",yaxis:"y2"},u={x:a,y:n,type:"bar",hovertemplate:"%{y:,g} Teaser Impressions<extra></extra>",name:"Card Teaser Impressions"},g={x:a,y:i,type:"scatter",hovertemplate:"%{y} Teaser Click Rate<extra></extra>",line:{width:4},name:"Card Teaser Click Rate",yaxis:"y2"},p=[c,h],m=[u,g],y=.4159,v=.9192,f=.9528,S=y*document.documentElement.clientHeight,b=v*document.documentElement.clientWidth,D=f*document.documentElement.clientWidth,w=Math.floor(.017*document.documentElement.clientHeight),V=Math.floor(.0094*document.documentElement.clientWidth),I=Math.floor(.013*document.documentElement.clientWidth),C=Math.floor(.0156*document.documentElement.clientWidth),P=Math.floor(.03*document.documentElement.clientWidth),T=Math.floor(.0104*document.documentElement.clientWidth),k=Math.floor(.01*document.documentElement.clientWidth),B={height:S,width:b,hoverlabel:{font:{size:k}},legend:{bgcolor:"#eeeeee",font:{size:w},x:1.1,y:.5},margin:{b:T,t:P},title:{font:{size:C},text:"Card Performance"},xaxis:{automargin:!0,fixedrange:!0,hoverformat:"%b %Y",tickformat:"%b<br>%Y",tickfont:{size:V},title:{font:{size:I},text:"Month"}},yaxis:{automargin:!0,fixedrange:!0,tickfont:{size:V},title:{font:{size:I},text:"Card Impressions"}},yaxis2:{automargin:!0,fixedrange:!0,showgrid:!1,tickfont:{size:V},title:{font:{size:I},text:"Card Click Rate"},overlaying:"y",side:"right",ticksuffix:"%",zeroline:!1}},E={displayModeBar:!1,scrollZoom:!1};let x=JSON.parse(JSON.stringify(B));x.title.text="Card Teaser Performance",x.yaxis.title.text="Card Teaser Impressions",x.width=D;let G=0;try{createGraph(t,m,x,E,y,v)}catch(e){G++,displayGraphError(t,e)}try{createGraph(r,p,B,E,y,v)}catch(e){G++,displayGraphError(r,e)}return G>0?Promise.resolve("Error Displaying Card Performance Dashboard"):Promise.resolve("Displayed Card Performance Dashboard")}).catch(e=>{displayGraphError(t,e),displayGraphError(r,e)})}function loadRealTimeStatsDashboard(){const e=gapi.auth2.getAuthInstance().isSignedIn.get();if(!e)return requestSpreadsheetData("Stats","Real Time Stats").then(e=>{let t={};const r=getColumnHeaders(e);for(let a=1;a<e.length;a++){const o=e[a],s=o[r["Time Range"]],n=o[r.Views],i=o[r["Estimated Minutes Watched"]],l=o[r["Average View Duration"]],d=o[r["Subscribers Gained"]];t[s]={views:parseInt(n),estimatedMinutesWatched:parseInt(i),averageViewDuration:parseInt(l),netSubscribersGained:parseInt(d)}}return lsSet("realTimeStats",t),displayRealTimeStats(t)});try{return displayRealTimeStats()}catch(e){return recordError(e),realTimeStatsCalls()}}function loadGraphsFromSheets(){return requestSpreadsheetData("Stats","Graph Data").then(e=>{let t=0;const r=getColumnHeaders(e);for(let a=1;a<e.length;a++){const o=e[a],s=o[r["Graph ID"]],n=JSON.parse(o[r.Data]),i=JSON.parse(o[r.Layout]),l=JSON.parse(o[r.Config]),d=parseFloat(o[r["Graph Height"]]),c=parseFloat(o[r["Graph Width"]]),h=JSON.parse(o[r.Automargin]);try{null!=document.getElementById(s)&&(Plotly.newPlot(s,n,i,l),"None"!=h?recordGraphSize(s,d,c,h):recordGraphSize(s,d,c))}catch(e){console.error(e),recordError(e),displayGraphError(s),t++}}return Promise.resolve("Displayed Graphs From Sheets with "+t+" errors")})}function loadTopVideoStats(){return requestSpreadsheetData("Stats","Top Video Stats").then(e=>{const t=getColumnHeaders(e);let r={},a=[];for(let o=1;o<e.length;o++){const s=e[o],n=s[t["Video ID"]],i=s[t["Dashboard ID"]],l=s[t.Title],d=s[t.Duration],c=s[t["Publish Date"]],h=s[t.Thumbnail],u=s[t.Views],g=s[t["Subscribers Gained"]],p=s[t["Average View Duration"]],m=s[t["Estimated Minutes Watched"]],y=s[t.Comments],v=parseInt(s[t.Likes]),f=parseInt(s[t.Dislikes]);try{document.getElementById(i+"-title").innerHTML=l,document.getElementById(i+"-duration").innerHTML="Duration: "+secondsToDuration(d),document.getElementById(i+"-duration-seconds").innerHTML=d,document.getElementById(i+"-publish-date").innerHTML="Published: "+c,document.getElementById(i+"-thumbnail").innerHTML=h;const e=[n,u,y,v,f,m,p,g,0];a.push(e),r[n]=i}catch(e){const t=`Dashboard "${i}" does not exist - `;console.error(t,e),recordError(e,t)}}const o={result:{rows:a}};return displayVideoBasicStats(o,r),Promise.resolve("Displayed Top Video Dashboards")})}function loadCategoryCharts(){return requestSpreadsheetData("Stats","Category Views By Year").then(e=>{const t=recordYearlyCategoryViews(e);return displayCategoryViewsAreaCharts(t)}).catch(e=>{recordError(e);const t=getDashboardGraphIds("categoryGraphs");t.forEach(e=>{displayGraphError(e)})})}function loadProductCategoriesDashboard(){return displayTopCategoriesGraphOne(),displayTopCategoriesGraphTwo(),displayTopCategoriesGraphThree(),Promise.resolve("Displayed Product Categories Dashboard")}function loadThumbnailDashboard(){const e=gapi.auth2.getAuthInstance().isSignedIn.get();if(e){const e=displayUploadThumbnails(),t={part:"statistics",forUsername:"automationdirect"},r=gapi.client.youtube.channels.list(t).then(e=>{const t=e.result.items[0].statistics.videoCount;document.getElementById("num-videos").innerText=t}).catch(e=>{const t="Unable to get number of channel videos: ";console.error(t,e),recordError(e,t)});return Promise.all([r,e])}return displayUploadThumbnails()}function loadTopVideoDashboards(){const e=document.getElementsByClassName("carousel-inner")[0],t=getTodaysDate();let r=[],a={};if(e.children["top-video-1"]){const e=getTopVideoByCategory("B","views")[0];null!=e&&(a[e]="top-video-1",r.push(e))}if(e.children["top-video-2"]){const e=getTopVideoByCategory("C","views")[0];null!=e&&(a[e]="top-video-2",r.push(e))}if(e.children["top-video-3"]){const e=getTopVideoByCategory("D","views")[0];null!=e&&(a[e]="top-video-3",r.push(e))}if(e.children["top-video-4"]){const e=getTopVideoByCategory("F","views")[0];null!=e&&(a[e]="top-video-4",r.push(e))}if(e.children["top-video-5"]){const e=getTopVideoByCategory("H","views")[0];null!=e&&(a[e]="top-video-5",r.push(e))}if(e.children["top-video-6"]){const e=getTopVideoByCategory("I","views")[0];null!=e&&(a[e]="top-video-6",r.push(e))}if(0==r.length)return null;const o=r.join(",");return topVideoCalls(joinDate,t,o,a)}function loadVideoStrengthDashboard(){const e=lsGet("statsByVideoId"),t=lsGet("allVideoStats");t.sort(sortVideosByStrength);let r=20,a="",o=[],s=0,n=0;for(;s<t.length&&n<r;){const i=t[s],l=i.videoId,d=e[l].organic;if(d){n++;const t=Math.round(100*i.strength)/100;let s="YouTube Video ID: "+l,d=`video-strength-bars-${n}`;o.push({videoStats:i,graphId:d}),e&&e[l]&&(s=e[l].title),a+=`\n        <div class="col-1">\n          <h1 style="font-size:5rem;">${n}.</h1>\n        </div>\n        <div class="col-3">\n          <a href="https://youtu.be/${l}" target="_blank"\n              alt="${s}">\n            <img class="feedback-thumbnail"\n                onload="thumbnailCheck($(this), true)"\n                src="https://i.ytimg.com/vi/${l}/maxresdefault.jpg"\n                alt="thumbnail" title="${s}">\n          </a>\n        </div>\n        <div class="col-4">\n          <h1 class="video-strength-title">${s}</h1>\n          <br>\n          <h2 class="video-strength-value">Strength: ${t}</h2>\n        </div>\n        <div class="col-4">\n          <div class="h-100 w-100 graph-container" id="${d}"></div>\n        </div>\n      `;const c='\n        <div class="col-12">\n          <hr style="border-top:0.25rem solid rgba(0,0,0,.3);">\n        </div>\n      ';n!=r&&(a+=c)}s++}let i=document.getElementById("video-strength-container");if(i.innerHTML=a,!autoScrollDivs.includes("video-strength-wrapper")){let e=lsGet("settings"),t=-1,r=0;for(;-1==t&&r<=e.dashboards.length;){let a=e.dashboards[r];"video-strength"==a.name&&(t=a.scrollSpeed),r++}t=t<=0?0:Math.ceil(1e3/t),new AutoDivScroll("video-strength-wrapper",t,1,1),autoScrollDivs.push("video-strength-wrapper")}if(gapi.auth2.getAuthInstance().isSignedIn.get())if(void 0===t[0].z)reloadVideoStrengthDashboard();else for(let e=0;e<o.length;e++){const t=o[e];displayVideoStrengthBars(t.videoStats,t.graphId)}}function reloadVideoStrengthDashboard(){return getVideoStrengthWeights().then(e=>{try{const t=lsGet("allVideoStats");let r=calcVideoStrength(t,e);lsSet("allVideoStats",r),loadVideoStrengthDashboard()}catch(e){const t="Unable to recalculate video strengths";return console.error(t,e),recordError(e,t),t}})}function updateCategoryTotals(e){let t=lsGet("statsByVideoId"),r=lsGet("categoryTotals");return e.forEach(e=>{let a=e.videoId,o=e.duration,s=e.views,n=e.likes,i=e.strength;t[a].duration=o;let l=t[a].categories;for(let e=0;e<l.length;e++){let t=l[e];null==r[t]&&(r[t]={},r[t].strength=0,r[t].videos=[],r[t].videosWithStrength=[]);let d=r[t],c=parseInt(d.views),h=parseInt(d.likes),u=parseInt(d.duration),g=parseFloat(d.strength);d.videos.push(a),d.views=c+s,d.likes=h+n,d.duration=u+o,null!=i&&(d.strength=g+i,d.videosWithStrength.push(a))}}),lsSet("categoryTotals",r),lsSet("statsByVideoId",t),r}function calcCategoryStats(e){let t=[];for(let r in e)if(e.hasOwnProperty(r)){let a=e[r],o=a.shortName,s=a.name,n=a.root,i=a.leaf,l=parseInt(a.views),d=parseInt(a.likes),c=parseInt(a.duration),h=parseFloat(a.strength),u=a.videosWithStrength,g=u.length,p=a.videos,m=p.length,y=l/m,v=d/m,f=c/m,S=h/g,b={},D={};u.forEach(e=>{const t=allVideoStats.findIndex(t=>e==t.videoId),r=allVideoStats[t],a=r.z;for(const e in a)a.hasOwnProperty(e)&&(null==b[e]&&(b[e]=0),b[e]+=a[e])});for(const e in b)if(b.hasOwnProperty(e)){const t=b[e];D[e]=t/u.length}t.push({avgDuration:f,avgLikes:v,avgViews:y,categoryId:r,duration:c,leaf:i,likes:d,name:s,root:n,shortName:o,totalStrength:h,avgStrength:S,videos:p,videosWithStrength:u,views:l,z:D})}return lsSet("categoryStats",t),t}function average(e){const t=e.reduce((e,t)=>e+t,0),r=t/e.length;return r}function standardDeviation(e,t){const r=e.map(e=>{const r=e-t,a=r**2;return a}),a=average(r),o=Math.sqrt(a);return o}function zScore(e,t,r){let a=e-t,o=a/r;return o}function zScoreForList(e){let t=average(e),r=standardDeviation(e,t),a=e.map(e=>zScore(e,t,r));return a}function zScoreByPropertyName(e,t){let r=e.map(e=>e[t]),a=zScoreForList(r),o=lsGet("strengthCalc"),s=-4,n=4;o&&(o.minZ&&(s=o.minZ),o.maxZ&&(n=o.maxZ));let i=a.map(e=>e>n?n:e<s?s:e);return i}function calcVideoStrength(e,t){const r=lsGet("statsByVideoId"),a=t.weights,o=t.numYears,s=1e3*o*60*60*24*365,n=new Date;let i=e.filter(e=>{if(r[e.videoId].organic){const t=new Date(r[e.videoId].publishDate),a=n-t;return s-a>0}return!1}),l={videoIds:i.map(e=>e.videoId),views:zScoreByPropertyName(i,"views"),avgViewsPerDay:zScoreByPropertyName(i,"avgViewsPerDay"),duration:zScoreByPropertyName(i,"duration"),comments:zScoreByPropertyName(i,"comments"),likesPerView:zScoreByPropertyName(i,"likesPerView"),dislikesPerView:zScoreByPropertyName(i,"dislikesPerView"),subscribersGained:zScoreByPropertyName(i,"subscribersGained"),avgViewDuration:zScoreByPropertyName(i,"avgViewDuration"),avgViewPercentage:zScoreByPropertyName(i,"avgViewPercentage"),daysSincePublished:zScoreByPropertyName(i,"daysSincePublished")},d=[];for(let e=0;e<l.videoIds.length;e++){const t=l.videoIds[e],r=l.views[e],o=l.avgViewsPerDay[e],s=l.duration[e],n=l.comments[e],i=l.likesPerView[e],c=l.dislikesPerView[e],h=l.subscribersGained[e],u=l.avgViewDuration[e],g=l.avgViewPercentage[e],p=l.daysSincePublished[e];let m=0;for(const t in a)if(a.hasOwnProperty(t)){const r=a[t];m+=r*l[t][e]}d.push({totalStrength:m,videoId:t,z:{views:r,avgViewsPerDay:o,duration:s,comments:n,likesPerView:i,dislikesPerView:c,subscribersGained:h,avgViewDuration:u,avgViewPercentage:g,daysSincePublished:p}})}d.sort(function(e,t){return e.totalStrength-t.totalStrength});let c=zScoreByPropertyName(d,"totalStrength"),h=c.length,u=Math.floor(0*h),g=Math.floor(h-1),p=c[u],m=c[g]-p;0==m&&(m=1);for(let e=0;e<d.length;e++){let t=c[e],r=(t-p)/m*100;d[e].strength=r}return e.forEach(e=>{const t=e.videoId,r=e.organic;if(r){const r=d.findIndex(e=>t==e.videoId);r>=0&&(e.strength=d[r].strength,e.totalStrength=d[r].totalStrength,e.z=d[r].z)}else e.strength=void 0,e.totalStrength=void 0,e.z=void 0}),e.sort(function(e,t){return new Date(t.publishDate)-new Date(e.publishDate)}),e}function sortVideosByStrength(e,t){return null==e.strength?1:null==t.strength?-1:e.strength==t.strength?t.totalStrength-e.totalStrength:t.strength-e.strength}