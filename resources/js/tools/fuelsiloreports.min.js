function displayChannelPlaylists(){return getChannelPlaylists().then(t=>(console.log("All Playlist Data"),console.log(t),createPlaylistsTable(t),Promise.resolve("Displayed Channel Playlists"))).catch(t=>{const e="Unable to display ADC channel playlists - ";displayError(e),console.error(e,t),recordError(t,e)}).then(t=>{const e=document.getElementById("table-loading");e.style.display="none"})}function getChannelPlaylists(t){let e={maxResults:25,mine:!0,part:"snippet,contentDetails"};return t&&(e.pageToken=t),gapi.client.youtube.playlists.list(e).then(t=>{console.log("Channel Playlists"),console.log(t);let e=[],n=t.result.items;for(let t=0;t<n.length;t++){const l=n[t],o=l.id,s=l.snippet.title;let r;try{r=l.snippet.thumbnails.maxres.url}catch(t){r=l.snippet.thumbnails.high.url}const a=l.snippet.description,i=l.contentDetails.itemCount,c=l.snippet.publishedAt;e.push({id:o,title:s,thumbnail:r,description:a,numVideos:i,publishedAt:c})}let l=t.result.nextPageToken;return l?getChannelPlaylists(l).then(t=>{let n=[].concat.apply([],[e,t]);return n}):e}).catch(t=>{const e="Unable to get ADC channel playlists - ";displayError(e),console.error(e,t),recordError(t,e)})}function createPlaylistsTable(t){const e=document.getElementById("playlist-table-body");let n="";t.forEach(t=>{const e=t.id,l=t.title,o=t.thumbnail,s=t.description||"No Description",r=t.numVideos;let a;a=1==r?"1 video":`${r} videos`;const i=t.publishedAt;n+=`\n    <tr>\n      <td>\n        <a href="https://www.youtube.com/playlist?list=${e}" target="_blank"\n          alt="${l}">\n          <img class="table-thumbnail" src="${o}" \n            alt="thumbnail" title="${l}">\n        </a>\n      </td>\n      <td class="h5"><strong>${l}</strong></td>\n      <td>${s}</td>\n      <td data-sort="${r}">${a}</td>\n      <td>\n        <button class="btn btn-lg btn-primary"\n          onclick="generateReportForPlaylist('${e}', '${l}')">\n          Generate Report\n        </button>\n      </td>\n      <td class="d-none">${e}</td>\n      <td class="d-none">${i}</td>\n    </tr>\n    `}),e.innerHTML=n,$("#playlist-table").DataTable({columnDefs:[{orderable:!1,targets:[0,4]},{searchable:!1,targets:6},{width:"20%",targets:1}],order:[[6,"desc"]],pageLength:25})}function generateReportForPlaylist(t,e){console.log(`Report generated for playlist: ${t}`),$("html, body").animate({scrollTop:0},"slow");const n=document.getElementById("report-loading-div");n.style.display="";const l=document.getElementById("report-playlist-title");l.innerText=e;const o="2010-01-01",s="2020-05-01";return getPlaylistVideos(t).then(t=>(console.log(t),getCumulativeViews(t,o,s))).then(t=>{console.log("Monthly Views"),console.log(t),createMonthlyViewsGraph(t)}).catch(e=>{const n=`Unable to generate report for playlist: ${t}`+" - ";displayError(n),console.error(n,e),recordError(e,n)}).then(t=>{const e=document.getElementById("report-loading"),n=document.getElementById("generating-text");e.style.display="none",n.style.display="none"})}function getPlaylistVideos(t,e){let n={part:"snippet,status,contentDetails",maxResults:50,playlistId:t};return e&&(n.pageToken=e),gapi.client.youtube.playlistItems.list(n).then(e=>{console.log("Playlist Videos:"),console.log(e);let n=[],l=e.result.items;for(let t=0;t<l.length;t++){const e=l[t],o=e.contentDetails.videoId;n.push(o)}let o=e.result.nextPageToken;return o?getPlaylistVideos(t,o).then(t=>{let e=[].concat.apply([],[n,t]);return e}):n}).catch(e=>{const n=`Unable to get videos for playlist: ${t} - `;displayError(n),console.error(n,e),recordError(e,n)})}function getCumulativeViews(t,e,n){let l=[];return t.forEach(t=>{l.push(getVideoViewsByMonth(t,e,n))}),Promise.all(l).then(t=>{let e={};return t.forEach(t=>{t.forEach(t=>{const n=t[0],l=t[1];e[n]||(e[n]=0),e[n]+=l})}),e}).catch(t=>{const e="Unable to combine all views data into one array - ";displayError(e),console.error(e,t),recordError(t,e)})}function getVideoViewsByMonth(t,e,n){const l={dimensions:"month",endDate:n,filters:`video==${t}`,ids:"channel==MINE",metrics:"views",startDate:e};return gapi.client.youtubeAnalytics.reports.query(l).then(t=>{const e=t.result.rows;return e}).catch(e=>{const n=`Unable to get monthly views for video: ${t} - `;displayError(n),console.error(n,e),recordError(e,n)})}function createMonthlyViewsGraph(t){let e=[],n=[];for(const l in t)if(t.hasOwnProperty(l)){const o=t[l];e.push(l),n.push(o)}var l=.75,o=.6603,s=l*document.documentElement.clientHeight,r=o*document.documentElement.clientWidth,a=Math.floor(.0073*document.documentElement.clientWidth),i=Math.floor(.0094*document.documentElement.clientWidth),c=Math.floor(.0104*document.documentElement.clientWidth);const d=[{x:e,y:n,type:"bar",name:"Monthy Views"}];let p={height:s,width:r,title:{font:{size:c},text:"Playlist Monthly Views"},xaxis:{automargin:!0,hoverformat:"%b %Y",tickformat:"%b<br>%Y",tickfont:{size:a},title:{font:{size:i},text:"Month"}},yaxis:{automargin:!0,fixedrange:!0,tickfont:{size:a},title:{font:{size:i},text:"Views"}}};const y={scrollZoom:!1,displayModeBar:!1};e.length<7&&(p.xaxis.nticks=e.length),console.log(d),Plotly.newPlot("playlist-graph",d,p,y),document.getElementById("playlist-graph").style.display=""}function displayError(t){const e=document.getElementById("alert-container"),n=`\n    <div class="alert alert-danger alert-dismissible fade show mb-2" id="error-alert" role="alert" style="display:inline-block;">\n      <i class="fas fa-exclamation-triangle"></i>  <strong>An error occurred:</strong> ${t}\n      <button type="button" class="close" data-dismiss="alert" aria-label="Close">\n        <span aria-hidden="true">&times;</span>\n      </button>\n    </div>`,l=createElement(n,"DIV");prependElement(e,l)}function loadSignedIn(){const t=document.getElementById("table-loading");t.style.display="",displayChannelPlaylists()}