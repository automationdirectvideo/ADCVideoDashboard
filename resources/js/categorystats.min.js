function loadSignedIn(){addDotsToLoadingText();const e=document.getElementById("home-button"),t=document.getElementById("control-panel-button");e.style.display="inline",t.style.display="inline",initializeUpdater(),loadDashboards(),updateTheme(0)}function loadSignedOut(){createSignInModal("dashboards");const e=document.getElementById("authorize-button");e.onclick=handleAuthClick,$("#signinModal").modal({backdrop:"static",keyboard:!1})}function loadDashboards(){if(!isLoading&&!isUpdating){setLoadingStatus(!0);const e=gapi.auth2.getAuthInstance().isSignedIn.get();if(showLoadingText(),resetGraphData(),e){let e=lsGet("categoryStats");e?loadDashboardsSignedIn():getBasicDashboardStats().then(e=>{loadDashboardsSignedIn()})}else loadDashboardsSignedOut()}}function loadDashboardsSignedIn(){let e=[];return e.push(loadProductCategoriesDashboard()),e.push(loadCategoryCharts()),console.log("Starting Load Dashboards Requests"),Promise.all(e).then(e=>{console.log("Load Dashboards Complete",e)}).catch(e=>{const t="Error occurred loading dashboards: ";console.error(t,e),recordError(e,t)}).finally(e=>{setLoadingStatus(!1),hideLoadingText()})}function initializeUpdater(){let e=new Date;e.setHours(0,0,0,0);const t=gapi.auth2.getAuthInstance().isSignedIn.get();var o=window.setInterval(()=>{const o=new Date;let r=Math.floor((o-e)/1e3);t&&(3600==r?recordUpdate("Reload Dashboards").then(e=>{window.location.reload()}):r%900==0&&loadDashboards())},1e3);return o}function initializeCarousels(){const e=document.getElementById("category-stats-carousel");e.setAttribute("data-interval",cycleSpeed),e.setAttribute("data-pause","false")}function displayCategoryViewsAreaCharts(e){let t=e.years,o=t.length,r=e.totals,a=[],i=[],n=[],l=[];for(var s in e)if(e.hasOwnProperty(s)&&"years"!=s&&"totals"!=s){let o=e[s].viewTrace,c=e[s].avgViewTrace,g=e[s].cumulativeViews,u=e[s].cumulativeAvgViewTrace,h=e[s].name,m=[];for(var d=0;d<o.length;d++){let e=(o[d]/r[d]*100).toFixed(2);m.push(e)}let p=categoryColors[h].color;null==p&&(p="#a0a0a0");let y=p+"80";a.push({x:t,y:o,stackgroup:"one",fillcolor:y,line:{color:p},hovertemplate:"%{text}% of %{x} views: <i>"+h+"</i><extra></extra>",name:h,text:m}),i.push({x:t,y:c,stackgroup:"one",fillcolor:y,line:{color:p},hovertemplate:"~%{y:,g} views per video in %{x}: <i>"+h+"</i><extra></extra>",name:h}),n.push({x:t,y:g,stackgroup:"one",fillcolor:y,line:{color:p},hovertemplate:"%{y:,g} views: <i>"+h+"</i><extra></extra>",name:h}),l.push({x:t,y:u,stackgroup:"one",fillcolor:y,line:{color:p},hovertemplate:"~%{y:,g} views per video: <i>"+h+"</i><extra></extra>",name:h})}var c=function(e,t){return parseInt(t.y[o-1])-parseInt(e.y[o-1])};a.sort(c),i.sort(c),n.sort(c),l.sort(c);var g=.8583,u=.9528,h=g*document.documentElement.clientHeight,m=u*document.documentElement.clientWidth,p=Math.floor(.017*document.documentElement.clientHeight),y=Math.floor(.0104*document.documentElement.clientWidth),f=Math.floor(.0156*document.documentElement.clientWidth),x=Math.floor(.0208*document.documentElement.clientWidth),v=Math.floor(.026*document.documentElement.clientWidth),b=Math.floor(.03*document.documentElement.clientWidth),S=Math.floor(.0104*document.documentElement.clientWidth);let w={height:h,width:m,hoverdistance:v,hoverlabel:{font:{size:y},namelength:-1},hovermode:"x",hovertemplate:"Test",legend:{bgcolor:"#eeeeee",font:{size:p},y:.5},margin:{b:S,t:b},paper_bgcolor:"rgba(0,0,0,0)",title:{font:{size:x},text:"Views By Category"},xaxis:{automargin:!0,fixedrange:!0,tickfont:{size:y},ticks:"outside",title:{font:{size:f},text:"Year"}},yaxis:{automargin:!0,fixedrange:!0,tickfont:{size:y},ticks:"outside",tickprefix:"  ",title:{font:{size:f},text:"Yearly Views"}}},E={scrollZoom:!1,displayModeBar:!1};const C=getDashboardGraphIds("categoryGraphs");let V=C[0],N=C[1],I=C[2],M=C[3],k=C[4],z=C[5],B=C[6],O=C[7],T=JSON.parse(JSON.stringify(a));T[0].groupnorm="percent";let G=JSON.parse(JSON.stringify(w));G.title.text="Views By Category, Normalized",G.yaxis.title.text="Percent Views",G.yaxis.ticksuffix="%";let P=JSON.parse(JSON.stringify(w));P.title.text="Cumulative Views By Category",P.yaxis.title.text="Cumulative Views";let A=JSON.parse(JSON.stringify(n));A[0].groupnorm="percent";let D=JSON.parse(JSON.stringify(P));D.title.text="Cumulative Views By Category, Normalized",D.yaxis.title.text="Percent Cumulative Views",D.yaxis.ticksuffix="%";for(d=0;d<A.length;d++){var J=A[d],W=J.name;J.hovertemplate="%{y:.2f}% of total views: <i>"+W+"</i><extra></extra>"}let _=JSON.parse(JSON.stringify(w));_.title.text="Average Views Per Video By Category",_.yaxis.title.text="Average Views Per Video",_.yaxis.tickformat=",g";let L=JSON.parse(JSON.stringify(i));L[0].groupnorm="percent";let H=JSON.parse(JSON.stringify(_));H.title.text="Average Views Per Video By Category, Normalized",H.yaxis.title.text="Percent Average Views Per Video",H.yaxis.ticksuffix="%";for(d=0;d<L.length;d++){J=L[d],W=J.name;J.hovertemplate="%{y:.2f}%: <i>"+W+"</i><extra></extra>"}let R=JSON.parse(JSON.stringify(w));R.title.text="Cumulative Average Views Per Video By Category",R.yaxis.title.text="Average Views Per Video",R.yaxis.tickformat=",g";let $=JSON.parse(JSON.stringify(l));$[0].groupnorm="percent";let U=JSON.parse(JSON.stringify(R));U.title.text="Cumulative Average Views Per Video By Category, Normalized",U.yaxis.title.text="Percent Average Views Per Video",U.yaxis.ticksuffix="%";for(d=0;d<$.length;d++){J=$[d],W=J.name;J.hovertemplate="%{y:.2f}%: <i>"+W+"</i><extra></extra>"}let Z=[[V,a,w],[N,T,G],[I,n,P],[M,A,D],[k,i,_],[z,L,H],[B,l,R],[O,$,U]],q=0;for(d=0;d<Z.length;d++){let[e,t,o]=Z[d];try{createGraph(e,t,o,E,g,u)}catch(t){displayGraphError(e,t),q++}}return Promise.resolve("Displayed Category Views Area Charts with "+q+" errors")}function displayTopCategoriesGraphTwo(e){e=e||lsGet("categoryStats");for(var t=["SPECIAL CATEGORIES","OTHER","MISC"],o=.8583,r=.9528,a=o*document.documentElement.clientHeight,i=r*document.documentElement.clientWidth,n=Math.floor(.0156*document.documentElement.clientWidth),l=Math.floor(.01*document.documentElement.clientWidth),s=Math.floor(.01*document.documentElement.clientWidth),d=Math.floor(.013*document.documentElement.clientWidth),c=[],g=[],u=[],h="views",m=0;m<e.length;m++){let o=e[m],r=o.root;if(r)for(var p=0;p<t.length;p++)o.name.includes(t[p])&&(r=!1);if(r){let e=Math.round(o[h]);u.push({value:e,label:o.shortName})}}u.sort(function(e,t){return e.value>t.value?-1:e.value==t.value?0:1});for(let e=0;e<u.length;e++){const t=u[e];c.push(t.value),g.push(t.label)}var y={x:g,y:c,name:"Total Views<br>By Category",type:"bar",yaxis:"y",offsetgroup:1,hoverlabel:{namelength:"-1"},hovertemplate:"%{label}<br>%{value:,} views"};c=[],g=[],u=[],h="avgViews";for(m=0;m<e.length;m++){let o=e[m],r=o.root;if(r)for(p=0;p<t.length;p++)o.name.includes(t[p])&&(r=!1);if(r){let e=Math.round(o[h]);u.push({value:e,label:o.shortName})}}u.sort(function(e,t){return e.value>t.value?-1:e.value==t.value?0:1});for(let e=0;e<u.length;e++){const t=u[e];c.push(t.value),g.push(t.label)}var f={x:g,y:c,name:"Average Views Per Video<br>By Category",type:"bar",yaxis:"y2",offsetgroup:2,hoverlabel:{namelength:"-1"},hovertemplate:"%{label}<br>~%{value:,} views per video"},x=[y,f],v={height:a,width:i,font:{size:l},paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",legend:{bgcolor:"#eeeeee",font:{size:s},x:.8},title:{font:{size:n},text:"Product Category Performance"},xaxis:{automargin:!0,fixedrange:!0,title:{font:{size:d},text:"Category"}},yaxis:{automargin:!0,fixedrange:!0,title:{font:{size:d},text:"Total Category Views"}},yaxis2:{automargin:!0,fixedrange:!0,showgrid:!1,overlaying:"y",side:"right",zeroline:!1,title:{font:{size:d},text:"Average Views Per Video"}}};let b={scrollZoom:!1,displayModeBar:!1};const S=getDashboardGraphIds("product-categories"),w=S.graphTwo,E=getCurrentDashboardTheme("product-categories");"dark"==E&&(v.plot_bgcolor="#222",v.paper_bgcolor="#222",v.font.color="#fff",v.legend.bgcolor="#444",v.legend.font.color="#fff");try{createGraph(w,x,v,b,o,r)}catch(e){displayGraphError(w,e)}}function displayTopCategoriesGraphThree(e){e=e||lsGet("categoryStats");var t=["SPECIAL CATEGORIES","OTHER","MISC"];let o=1;e.forEach(e=>{if(e.root){let t=e.strength;t<o&&(o=t)}});var r=.8583,a=.9528,i=r*document.documentElement.clientHeight,n=a*document.documentElement.clientWidth,l=Math.floor(.0125*document.documentElement.clientWidth),s=Math.floor(.01*document.documentElement.clientWidth),d=Math.floor(.01*document.documentElement.clientWidth),c=Math.floor(.013*document.documentElement.clientWidth);let g=[],u=[],h=[],m=[],p=[],y=[],f=[],x=categoryColors;for(var v=0;v<e.length;v++){let o=e[v],r=o.root;if(r)for(var b=0;b<t.length;b++)o.name.includes(t[b])&&(r=!1);if(r){let e=Math.round(o.views),t=Math.round(o.avgViews),r=Math.round(100*o.avgStrength),a=o.videos.length,i=o.shortName,n=x[o.shortName].color;0!=r&&(g.push(e),u.push(t),h.push(a),m.push(i),p.push(n),y.push(v),f.push({x:[e],y:[a],mode:"markers",type:"scatter",marker:{color:[n],size:[r],sizemode:"area"},customdata:[[Math.round(o.avgStrength),v]],name:i,text:[i],hoverlabel:{namelength:"-1"},hovertemplate:"<b>%{text}</b><br>%{x:,} views<br>%{y} videos<br>Category Strength: %{customdata[0]:,}<extra></extra>"}))}}var S={height:i,width:n,font:{size:s},hovermode:"closest",paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",legend:{bgcolor:"#eeeeee",font:{size:d},y:.5},title:{font:{size:l},text:"<b>Product Category Performance</b><br>Circle Area is proportional to Category Strength"},xaxis:{automargin:!0,fixedrange:!0,gridcolor:"#aaaaaa",title:{font:{size:c},text:"Total Category Views"},type:"log"},yaxis:{automargin:!0,fixedrange:!0,gridcolor:"#888888",title:{font:{size:c},text:"Number of Videos"},type:"log"}};let w={scrollZoom:!1,displayModeBar:!1};const E=getDashboardGraphIds("product-categories"),C=E.graphThree,V=getCurrentDashboardTheme("product-categories");"dark"==V&&(S.plot_bgcolor="#222",S.paper_bgcolor="#222",S.font.color="#fff",S.legend.bgcolor="#444",S.legend.font.color="#fff");try{createGraph(C,f,S,w,r,a);const t=document.getElementById(C);t.on("plotly_click",t=>{const o=t.points[0].text,r=t.points[0]["marker.color"],a=t.points[0].customdata[1],i=e[a];displayCategoryStrengthBars(i,o,r)})}catch(e){displayGraphError(C,e)}}function hideCategoryStrengthGraph(){document.getElementById("category-graph-container").style.display="none"}function showCategoryStrengthGraph(){document.getElementById("category-graph-container").style.display="",document.getElementById("popup-graph-loading").style.display="",document.getElementById("category-strength-popup-graph").style.display="none"}function displayCategoryStrengthBars(e,t,o){const r=lsGet("allVideoStats"),a=document.getElementById("popup-graph-title");a.innerHTML=t,showCategoryStrengthGraph();let i=[],n=0,l=5,s=100;for(let e=0;e<s;e+=l)i.push({binNum:n,minNum:e,maxNum:e+l,count:0}),n++;const d=e.videosWithStrength;d.forEach(e=>{const t=r.findIndex(t=>e==t.videoId),o=r[t].strength;for(let e=0;e<i.length;e++){let t=i[e];o>t.minNum&&o<=t.maxNum&&t.count++}});let c=[],g=[],u=[],h=[];for(let e=0;e<i.length;e++){const t=i[e];c.push(t.minNum),g.push(t.count/d.length);let o=`${t.count} videos`;1==t.count&&(o=`${t.count} video`),u.push([o,`${t.minNum} - ${t.maxNum}`]),e%2==0?h.push(String(t.minNum)):h.push("")}const m=[{x:c,y:g,customdata:u,hovermode:"none",hovertemplate:"%{customdata[1]}<br>%{customdata[0]}<extra></extra>",offset:.5,marker:{color:o},type:"bar"}];var p=.2938,y=.2713,f=p*document.documentElement.clientHeight,x=y*document.documentElement.clientWidth,v=Math.floor(.02*document.documentElement.clientWidth),b=Math.floor(.02*document.documentElement.clientWidth);const S={height:f,width:x,bargap:0,hovermode:"closest",margin:{b:0,l:0,r:b,t:v},paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",title:{text:"Distribution of Video Strength"},xaxis:{automargin:!0,fixedrange:!0,tickmode:"array",ticktext:h,tickvals:c,title:{text:"Video Strength"}},yaxis:{automargin:!0,fixedrange:!0,gridcolor:"#888888",tickprefix:"   ",title:{text:"Relative Frequency"},zerolinewidth:2}},w={scrollZoom:!1,displayModeBar:!1,responsive:!0},E="category-strength-popup-graph";try{createGraph(E,m,S,w,p,y),document.getElementById(E).style.display="initial",document.getElementById("popup-graph-loading").style.display="none"}catch(e){displayGraphError(E,e)}}