function displayCategoryStrengthBars(e,t,o){const r=lsGet("allVideoStats"),a=document.getElementById("popup-graph-title");a.innerHTML=t,showCategoryStrengthGraph();let i=[],l=0,n=5,s=100;for(let e=0;e<s;e+=n)i.push({binNum:l,minNum:e,maxNum:e+n,count:0}),l++;const c=e.videosWithStrength;c.forEach(e=>{const t=r.findIndex(t=>e==t.videoId),o=r[t].strength;for(let e=0;e<i.length;e++){let t=i[e];o>t.minNum&&o<=t.maxNum&&t.count++}});let d=[],m=[],g=[],h=[];for(let e=0;e<i.length;e++){const t=i[e];d.push(t.minNum),m.push(t.count/c.length);let o=`${t.count} videos`;1==t.count&&(o=`${t.count} video`),g.push([o,`${t.minNum} - ${t.maxNum}`]),e%2==0?h.push(String(t.minNum)):h.push("")}const u=[{x:d,y:m,customdata:g,hovermode:"none",hovertemplate:"%{customdata[1]}<br>%{customdata[0]}<extra></extra>",offset:.5,marker:{color:o},type:"bar"}];var p=.2938,f=.2713,y=p*document.documentElement.clientHeight,x=f*document.documentElement.clientWidth,v=Math.floor(.02*document.documentElement.clientWidth),b=Math.floor(.02*document.documentElement.clientWidth);const w={height:y,width:x,bargap:0,hovermode:"closest",margin:{b:0,l:0,r:b,t:v},paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",title:{text:"Distribution of Video Strength"},xaxis:{automargin:!0,fixedrange:!0,tickmode:"array",ticktext:h,tickvals:d,title:{text:"Video Strength"}},yaxis:{automargin:!0,fixedrange:!0,gridcolor:"#888888",tickprefix:"   ",title:{text:"Relative Frequency"},zerolinewidth:2}},E={scrollZoom:!1,displayModeBar:!1,responsive:!0},C="category-strength-popup-graph";try{createGraph(C,u,w,E,p,f,!1),document.getElementById(C).style.display="initial",document.getElementById("popup-graph-loading").style.display="none"}catch(e){displayGraphError(C,e)}}function displayCategoryViewsAreaCharts(e){let t=e.years,o=t.length,r=e.totals,a=[],i=[],l=[],n=[];for(var s in e)if(e.hasOwnProperty(s)&&"years"!=s&&"totals"!=s){let o=e[s].viewTrace,d=e[s].avgViewTrace,m=e[s].cumulativeViews,g=e[s].cumulativeAvgViewTrace,h=e[s].name,u=[];for(var c=0;c<o.length;c++){let e=(o[c]/r[c]*100).toFixed(2);u.push(e)}let p=categoryColors[h].color;null==p&&(p="#a0a0a0");let f=p+"80";a.push({x:t,y:o,stackgroup:"one",fillcolor:f,line:{color:p},hovertemplate:"%{text}% of %{x} views: <i>"+h+"</i><extra></extra>",name:h,text:u}),i.push({x:t,y:d,stackgroup:"one",fillcolor:f,line:{color:p},hovertemplate:"~%{y:,g} views per video in %{x}: <i>"+h+"</i><extra></extra>",name:h}),l.push({x:t,y:m,stackgroup:"one",fillcolor:f,line:{color:p},hovertemplate:"%{y:,g} views: <i>"+h+"</i><extra></extra>",name:h}),n.push({x:t,y:g,stackgroup:"one",fillcolor:f,line:{color:p},hovertemplate:"~%{y:,g} views per video: <i>"+h+"</i><extra></extra>",name:h})}var d=function(e,t){return parseInt(t.y[o-1])-parseInt(e.y[o-1])};a.sort(d),i.sort(d),l.sort(d),n.sort(d);var m=.8583,g=.9528,h=m*document.documentElement.clientHeight,u=g*document.documentElement.clientWidth,p=Math.floor(.017*document.documentElement.clientHeight),f=Math.floor(.0104*document.documentElement.clientWidth),y=Math.floor(.0156*document.documentElement.clientWidth),x=Math.floor(.0208*document.documentElement.clientWidth),v=Math.floor(.026*document.documentElement.clientWidth),b=Math.floor(.03*document.documentElement.clientWidth),w=Math.floor(.0104*document.documentElement.clientWidth);let E={height:h,width:u,hoverdistance:v,hoverlabel:{font:{size:f},namelength:-1},hovermode:"x",hovertemplate:"Test",legend:{bgcolor:"#eeeeee",font:{size:p},y:.5},margin:{b:w,t:b},paper_bgcolor:"rgba(0,0,0,0)",title:{font:{size:x},text:"Views By Category"},xaxis:{automargin:!0,fixedrange:!0,tickfont:{size:f},ticks:"outside",title:{font:{size:y},text:"Year"}},yaxis:{automargin:!0,fixedrange:!0,tickfont:{size:f},ticks:"outside",tickprefix:"  ",title:{font:{size:y},text:"Yearly Views"}}},C={scrollZoom:!1,displayModeBar:!1};const S=getDashboardGraphIds("categoryGraphs");let V=S[0],N=S[1],M=S[2],z=S[3],O=S[4],k=S[5],W=S[6],J=S[7],P=JSON.parse(JSON.stringify(a));P[0].groupnorm="percent";let B=JSON.parse(JSON.stringify(E));B.title.text="Views By Category, Normalized",B.yaxis.title.text="Percent Views",B.yaxis.ticksuffix="%";let G=JSON.parse(JSON.stringify(E));G.title.text="Cumulative Views By Category",G.yaxis.title.text="Cumulative Views";let T=JSON.parse(JSON.stringify(l));T[0].groupnorm="percent";let A=JSON.parse(JSON.stringify(G));A.title.text="Cumulative Views By Category, Normalized",A.yaxis.title.text="Percent Cumulative Views",A.yaxis.ticksuffix="%";for(c=0;c<T.length;c++){var I=T[c],_=I.name;I.hovertemplate="%{y:.2f}% of total views: <i>"+_+"</i><extra></extra>"}let H=JSON.parse(JSON.stringify(E));H.title.text="Average Views Per Video By Category",H.yaxis.title.text="Average Views Per Video",H.yaxis.tickformat=",g";let D=JSON.parse(JSON.stringify(i));D[0].groupnorm="percent";let R=JSON.parse(JSON.stringify(H));R.title.text="Average Views Per Video By Category, Normalized",R.yaxis.title.text="Percent Average Views Per Video",R.yaxis.ticksuffix="%";for(c=0;c<D.length;c++){I=D[c],_=I.name;I.hovertemplate="%{y:.2f}%: <i>"+_+"</i><extra></extra>"}let Z=JSON.parse(JSON.stringify(E));Z.title.text="Cumulative Average Views Per Video By Category",Z.yaxis.title.text="Average Views Per Video",Z.yaxis.tickformat=",g";let $=JSON.parse(JSON.stringify(n));$[0].groupnorm="percent";let L=JSON.parse(JSON.stringify(Z));L.title.text="Cumulative Average Views Per Video By Category, Normalized",L.yaxis.title.text="Percent Average Views Per Video",L.yaxis.ticksuffix="%";for(c=0;c<$.length;c++){I=$[c],_=I.name;I.hovertemplate="%{y:.2f}%: <i>"+_+"</i><extra></extra>"}let F=[[V,a,E],[N,P,B],[M,l,G],[z,T,A],[O,i,H],[k,D,R],[W,n,Z],[J,$,L]],Y=0;for(c=0;c<F.length;c++){let[e,t,o]=F[c];try{createGraph(e,t,o,C,m,g,!1)}catch(t){displayGraphError(e,t),Y++}}return Promise.resolve("Displayed Category Views Area Charts with "+Y+" errors")}function displayTopCategoriesGraphTwo(e){e=e||lsGet("categoryStats");const t=["SPECIAL CATEGORIES","OTHER","MISC"],o=.8583,r=.9528,a=o*document.documentElement.clientHeight,i=r*document.documentElement.clientWidth,l=Math.floor(.0156*document.documentElement.clientWidth),n=Math.floor(.01*document.documentElement.clientWidth),s=Math.floor(.01*document.documentElement.clientWidth),c=Math.floor(.013*document.documentElement.clientWidth),d=Math.floor(.01*document.documentElement.clientWidth);let m=[],g=[],h=[],u="views";for(let o=0;o<e.length;o++){const r=e[o];let a=r.root;if(a)for(let e=0;e<t.length;e++)r.name.includes(t[e])&&(a=!1);if(a){const e=Math.round(r[u]);h.push({value:e,label:r.shortName})}}h.sort(function(e,t){return e.value>t.value?-1:e.value==t.value?0:1});for(let e=0;e<h.length;e++){const t=h[e];m.push(t.value),g.push(t.label)}const p={x:g,y:m,hoverlabel:{namelength:"-1"},hovertemplate:"%{label}<br>%{value:,} views<extra></extra>",name:"Total Views<br>By Category",offsetgroup:1,type:"bar",yaxis:"y"};m=[],g=[],h=[],u="avgViews";for(let o=0;o<e.length;o++){const r=e[o];let a=r.root;if(a)for(let e=0;e<t.length;e++)r.name.includes(t[e])&&(a=!1);if(a){const e=Math.round(r[u]);h.push({value:e,label:r.shortName})}}h.sort(function(e,t){return e.value>t.value?-1:e.value==t.value?0:1});for(let e=0;e<h.length;e++){const t=h[e];m.push(t.value),g.push(t.label)}const f={x:g,y:m,hoverlabel:{namelength:"-1"},hovertemplate:"%{label}<br>~%{value:,} views per video<extra></extra>",name:"Average Views Per Video<br>By Category",offsetgroup:2,type:"bar",yaxis:"y2"},y=[p,f],x={height:a,width:i,font:{size:n},hoverlabel:{font:{size:d}},legend:{bgcolor:"#eeeeee",font:{size:s},x:.8},paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",title:{font:{size:l},text:"Product Category Performance"},xaxis:{automargin:!0,fixedrange:!0,title:{font:{size:c},text:"Category"}},yaxis:{automargin:!0,fixedrange:!0,title:{font:{size:c},text:"Total Category Views"}},yaxis2:{automargin:!0,fixedrange:!0,overlaying:"y",showgrid:!1,side:"right",title:{font:{size:c},text:"Average Views Per Video"},zeroline:!1}},v={displayModeBar:!1,scrollZoom:!1},b=getDashboardGraphIds("product-categories"),w=b.graphTwo,E=getCurrentDashboardTheme("product-categories");"dark"==E&&(x.plot_bgcolor="#222",x.paper_bgcolor="#222",x.font.color="#fff",x.legend.bgcolor="#444",x.legend.font.color="#fff");try{createGraph(w,y,x,v,o,r,!1)}catch(e){displayGraphError(w,e)}}function displayTopCategoriesGraphThree(e){e=e||lsGet("categoryStats");const t=["SPECIAL CATEGORIES","OTHER","MISC"];let o=1;e.forEach(e=>{if(e.root){const t=e.strength;t<o&&(o=t)}});const r=.8583,a=.9528,i=r*document.documentElement.clientHeight,l=a*document.documentElement.clientWidth,n=Math.floor(.0125*document.documentElement.clientWidth),s=Math.floor(.01*document.documentElement.clientWidth),c=Math.floor(.01*document.documentElement.clientWidth),d=Math.floor(.013*document.documentElement.clientWidth),m=Math.floor(.01*document.documentElement.clientWidth);let g=[],h=[],u=[],p=[],f=[],y=[],x=[];const v=categoryColors;for(let o=0;o<e.length;o++){let r=e[o],a=r.root;if(a)for(let e=0;e<t.length;e++)r.name.includes(t[e])&&(a=!1);if(a){let e=Math.round(r.views),t=Math.round(r.avgViews),a=Math.round(100*r.avgStrength),i=r.videos.length,l=r.shortName,n=v[r.shortName].color;0!=a&&(g.push(e),h.push(t),u.push(i),p.push(l),f.push(n),y.push(o),x.push({x:[e],y:[i],mode:"markers",type:"scatter",marker:{color:[n],size:[a],sizemode:"area"},customdata:[[Math.round(r.avgStrength),o]],name:l,text:[l],hoverlabel:{namelength:"-1"},hovertemplate:"<b>%{text}</b><br>%{x:,} views<br>%{y} videos<br>Category Strength: %{customdata[0]:,}<extra></extra>"}))}}let b={height:i,width:l,font:{size:s},hoverlabel:{font:{size:m}},hovermode:"closest",legend:{bgcolor:"#eeeeee",font:{size:c},y:.5},paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",title:{font:{size:n},text:"<b>Product Category Performance</b><br>Circle Area is proportional to Category Strength"},xaxis:{automargin:!0,fixedrange:!0,gridcolor:"#aaaaaa",title:{font:{size:d},text:"Total Category Views"},type:"log"},yaxis:{automargin:!0,fixedrange:!0,gridcolor:"#888888",title:{font:{size:d},text:"Number of Videos"},type:"log"}};const w={displayModeBar:!1,scrollZoom:!1},E=getDashboardGraphIds("product-categories"),C=E.graphThree,S=getCurrentDashboardTheme("product-categories");"dark"==S&&(b.plot_bgcolor="#222",b.paper_bgcolor="#222",b.font.color="#fff",b.legend.bgcolor="#444",b.legend.font.color="#fff");try{createGraph(C,x,b,w,r,a,!1);const t=document.getElementById(C);t.on("plotly_click",t=>{const o=t.points[0].text,r=t.points[0]["marker.color"],a=t.points[0].customdata[1],i=e[a];displayCategoryStrengthBars(i,o,r)})}catch(e){displayGraphError(C,e)}}