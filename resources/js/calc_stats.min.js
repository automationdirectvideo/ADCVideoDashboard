function updateVideoAndCategoryStats(){const e=getCategoryList(),t=getVideoList();return Promise.all([e,t]).then(e=>{e[0],e[1][0];const t=e[1][1];return getAllVideoStats(t)}).then(e=>getTopTenVideosForCurrMonth())}function getCategoryList(){return requestSpreadsheetData("Input Data","Category List").then(e=>{let t={};const r=getColumnHeaders(e);for(let a=1;a<e.length;a++){const s=e[a];let o=s[r["Category ID"]];const i=s[r["L1 Category"]],n=s[r["L2 Category"]],l=s[r["L3 Category"]];let g="";const d=s[r["Short Name"]];let c=!1;const h=!0;if(/\d/.test(o)){const e=o.match(/[A-Z]+/)[0];if(t[e].leaf=!1,g=t[e].name+"->"+n,""!=o.replace(/[A-Z]+[0-9]+/,"")){const e=o.match(/[A-Z]+[0-9]+/)[0];t[e].leaf=!1,g=t[e].name+"->"+l}}else c=!0,g=i;t[o]={shortName:d,name:g,root:c,leaf:h,views:0,likes:0,duration:0,videos:[],videosWithStrength:[],strength:0}}return lsSet("categoryTotals",t),t})}function getVideoList(){return requestSpreadsheetData("Input Data","Video List").then(e=>{let t={},r=[],a={};const s=e[0];for(let e=0;e<s.length;e++)a[s[e]]=e;for(let s=1;s<e.length;s++){const o=e[s],i="TRUE"===o[a.Organic],n=o[a["Video ID"]],l=o[a.Title],g=o[a["Publish Date"]],d=o[a.Duration];let c=o[a.Categories];const h=o[a["Created By"]]||"Unknown",u=o[a.Privacy].toLowerCase();c=c.replace(/\s/g,"");const p=c.split(",");let S=[];for(let e=0;e<p.length;e++){let t=p[e];if(-1==S.indexOf(t)&&S.push(t),/\d/.test(t)){const e=t.match(/[A-Z]+/)[0];if(-1==S.indexOf(e)&&S.push(e),""!=t.replace(/[A-Z]+[0-9]+/,"")){const e=t.match(/[A-Z]+[0-9]+/)[0];-1==S.indexOf(e)&&S.push(e)}}}t[n]={categories:S,createdBy:h,duration:d,organic:i,privacy:u,publishDate:g,title:l},r.push(n)}return lsSet("statsByVideoId",t),lsSet("uploads",r),[t,r]})}function getCategoryStats(){return requestSpreadsheetData("Stats","Category Stats").then(e=>{const t=getColumnHeaders(e);let r=[];for(let a=1;a<e.length;a++){const s=e[a],o=s[t["Category ID"]],i=s[t.Name],n=s[t["Short Name"]],l=parseInt(s[t.Views]),g=parseInt(s[t.Likes]),d=parseInt(s[t["Duration (sec)"]]),c=parseFloat(s[t["Average Video Views"]]),h=parseFloat(s[t["Average Video Likes"]]),u=parseFloat(s[t["Average Video Duration"]]),p=parseFloat(s[t.Strength]),S=s[t.Videos],v=S.split(","),y=s[t["Videos With Strength"]],V=y.split(","),m="TRUE"===s[t.Root],f="TRUE"===s[t.Leaf];r.push({categoryId:o,name:i,shortName:n,views:l,likes:g,duration:d,avgViews:c,avgLikes:h,avgDuration:u,avgStrength:p,videos:v,videosWithStrength:V,root:m,leaf:f})}return lsSet("categoryStats",r),r})}function getVideoStats(){return requestSpreadsheetData("Stats","Video Stats").then(e=>{const t=getColumnHeaders(e);let r=[],a=[],s={};for(let o=1;o<e.length;o++){const i=e[o],n=i[t["Video ID"]],l=i[t.Title],g=parseInt(i[t.Views]),d=parseInt(i[t.Likes]),c=parseInt(i[t.Dislikes]),h=parseInt(i[t["Duration (sec)"]]),u=parseInt(i[t.Comments]),p=i[t["YouTube Publish Date"]].substr(0,10),S=i[t.Categories].replace(/\s/g,""),v=i[t["Created By"]],y="TRUE"===i[t.Organic],V=parseFloat(i[t.Strength]),m=parseInt(i[t["Average View Duration"]]),f=parseFloat(i[t["Average View Percentage"]]),w=parseFloat(i[t["Average Views Per Day"]]),P=parseInt(i[t["Days Since Published"]]),D=parseInt(i[t["Subscribers Gained"]]),I=parseFloat(i[t["Likes Per View"]]),b=parseFloat(i[t["Dislikes Per View"]]),k={videoId:n,views:g,likes:d,dislikes:c,comments:u,duration:h,strength:V,avgViewDuration:m,avgViewPercentage:f,avgViewsPerDay:w,daysSincePublished:P,subscribersGained:D,likesPerView:I,dislikesPerView:b,organic:y};a.push(k),s[n]||(s[n]={}),s[n].title=l,s[n].publishDate=p,s[n].duration=h,s[n].categories=S,s[n].createdBy=v,s[n].organic=y,r.push(n)}lsSet("allVideoStats",a),lsSet("statsByVideoId",s),lsSet("uploads",r)})}function getBasicDashboardStats(){let e=[];return e.push(getCategoryStats()),e.push(getVideoStats()),e.push(getVideoStrengthWeights()),Promise.all(e)}function getVideoStrengthWeights(){return requestSpreadsheetData("Input Data","Video Strength Calculation").then(e=>{let t={},r={},a=getColumnHeaders(e),s=1,o=e[s];for(;s<e.length&&0!=o.length;){let r=o[a["Short Name"]],i=parseFloat(o[a.Weight]);t[r]=i,s++,o=e[s]}for(s++;s<e.length;){o=e[s];let t=o[a["Short Name"]],i=parseFloat(o[a.Weight]);r[t]=i,s++}return r.weights=t,lsSet("strengthCalc",r),Promise.resolve(r)})}function updateCategoryTotals(e){let t=lsGet("statsByVideoId"),r=lsGet("categoryTotals");return e.forEach(e=>{let a=e.videoId,s=e.duration,o=e.views,i=e.likes,n=e.strength;t[a].duration=s;let l=t[a].categories;for(let e=0;e<l.length;e++){let t=l[e];null==r[t]&&(r[t]={},r[t].strength=0,r[t].videos=[],r[t].videosWithStrength=[]);let g=r[t],d=parseInt(g.views),c=parseInt(g.likes),h=parseInt(g.duration),u=parseFloat(g.strength);g.videos.push(a),g.views=d+o,g.likes=c+i,g.duration=h+s,null!=n&&(g.strength=u+n,g.videosWithStrength.push(a))}}),lsSet("categoryTotals",r),lsSet("statsByVideoId",t),r}function calcCategoryStats(e){let t=[];for(let r in e)if(e.hasOwnProperty(r)){let a=e[r],s=a.shortName,o=a.name,i=a.root,n=a.leaf,l=parseInt(a.views),g=parseInt(a.likes),d=parseInt(a.duration),c=parseFloat(a.strength),h=a.videosWithStrength,u=h.length,p=a.videos,S=p.length,v=l/S,y=g/S,V=d/S,m=c/u,f={},w={};h.forEach(e=>{const t=allVideoStats.findIndex(t=>e==t.videoId),r=allVideoStats[t],a=r.z;for(const e in a)a.hasOwnProperty(e)&&(null==f[e]&&(f[e]=0),f[e]+=a[e])});for(const e in f)if(f.hasOwnProperty(e)){const t=f[e];w[e]=t/h.length}t.push({avgDuration:V,avgLikes:y,avgViews:v,categoryId:r,duration:d,leaf:n,likes:g,name:o,root:i,shortName:s,totalStrength:c,avgStrength:m,videos:p,videosWithStrength:h,views:l,z:w})}return lsSet("categoryStats",t),t}function average(e){const t=e.reduce((e,t)=>e+t,0),r=t/e.length;return r}function standardDeviation(e,t){const r=e.map(e=>{const r=e-t,a=r**2;return a}),a=average(r),s=Math.sqrt(a);return s}function zScore(e,t,r){let a=e-t,s=a/r;return s}function zScoreForList(e){let t=average(e),r=standardDeviation(e,t),a=e.map(e=>zScore(e,t,r));return a}function zScoreByPropertyName(e,t){let r=e.map(e=>e[t]),a=zScoreForList(r),s=lsGet("strengthCalc"),o=-4,i=4;s&&(s.minZ&&(o=s.minZ),s.maxZ&&(i=s.maxZ));let n=a.map(e=>e>i?i:e<o?o:e);return n}function calcVideoStrength(e,t){const r=lsGet("statsByVideoId"),a=t.weights,s=t.numYears,o=1e3*s*60*60*24*365,i=new Date;let n=e.filter(e=>{if(r[e.videoId].organic){const t=new Date(r[e.videoId].publishDate),a=i-t;return o-a>0}return!1}),l={videoIds:n.map(e=>e.videoId),views:zScoreByPropertyName(n,"views"),avgViewsPerDay:zScoreByPropertyName(n,"avgViewsPerDay"),duration:zScoreByPropertyName(n,"duration"),comments:zScoreByPropertyName(n,"comments"),likesPerView:zScoreByPropertyName(n,"likesPerView"),dislikesPerView:zScoreByPropertyName(n,"dislikesPerView"),subscribersGained:zScoreByPropertyName(n,"subscribersGained"),avgViewDuration:zScoreByPropertyName(n,"avgViewDuration"),avgViewPercentage:zScoreByPropertyName(n,"avgViewPercentage"),daysSincePublished:zScoreByPropertyName(n,"daysSincePublished")},g=[];for(let e=0;e<l.videoIds.length;e++){const t=l.videoIds[e],r=l.views[e],s=l.avgViewsPerDay[e],o=l.duration[e],i=l.comments[e],n=l.likesPerView[e],d=l.dislikesPerView[e],c=l.subscribersGained[e],h=l.avgViewDuration[e],u=l.avgViewPercentage[e],p=l.daysSincePublished[e];let S=0;for(const t in a)if(a.hasOwnProperty(t)){const r=a[t];S+=r*l[t][e]}g.push({totalStrength:S,videoId:t,z:{views:r,avgViewsPerDay:s,duration:o,comments:i,likesPerView:n,dislikesPerView:d,subscribersGained:c,avgViewDuration:h,avgViewPercentage:u,daysSincePublished:p}})}g.sort(function(e,t){return e.totalStrength-t.totalStrength});let d=zScoreByPropertyName(g,"totalStrength"),c=d.length,h=Math.floor(0*c),u=Math.floor(c-1),p=d[h],S=d[u]-p;0==S&&(S=1);for(let e=0;e<g.length;e++){let t=d[e],r=(t-p)/S*100;g[e].strength=r}return e.forEach(e=>{const t=e.videoId,r=e.organic;if(r){const r=g.findIndex(e=>t==e.videoId);r>=0&&(e.strength=g[r].strength,e.totalStrength=g[r].totalStrength,e.z=g[r].z)}else e.strength=void 0,e.totalStrength=void 0,e.z=void 0}),e.sort(function(e,t){return new Date(t.publishDate)-new Date(e.publishDate)}),e}