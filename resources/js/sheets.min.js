function recordYearlyCategoryViews(e){let t=lsGet("categoryStats"),a={},s=[];for(var r=1;r<e.length;r+=2){let t=e[r][0].substr(0,4);s.push(t)}a.years=s;let o=new Array(s.length).fill(0);for(var i=1;i<e[0].length;i++){let s=e[0][i],h=!1;for(var n=0;0==h&&n<t.length;)t[n].categoryId==s&&(h=t[n]),n++;let u=h.root;if(u&&"A"!=s){let t=[],n=[],u=[],l=[];for(r=1;r<e.length;r+=2){let a=parseInt(e[r][i]),s=parseInt(e[r+1][i]);t.push(a);let h=0;1!=r&&(h=parseInt(u[(r-1)/2-1]));let p=h+a;u.push(p);let g=0,d=0;0!=s&&(g=(a/s).toFixed(0),d=(p/s).toFixed(0)),n.push(g),l.push(d),o[(r-1)/2]+=parseInt(a)}a[s]={name:h.shortName,viewTrace:t,avgViewTrace:n,cumulativeViews:u,cumulativeAvgViewTrace:l}}}return a.totals=o,a}function saveCategoryStatsToSheets(e){for(var t=[["Category ID","Name","Short Name","Views","Likes","Duration (sec)","Strength","Average Video Views","Average Video Likes","Average Video Duration","Videos","Videos With Strength","Root","Leaf"]],a=0;a<e.length;a++){var s=[];s.push(e[a].categoryId),s.push(e[a].name),s.push(e[a].shortName),s.push(e[a].views),s.push(e[a].likes),s.push(e[a].duration),s.push(e[a].avgStrength),s.push(e[a].avgViews),s.push(e[a].avgLikes),s.push(e[a].avgDuration),s.push(e[a].videos.join(",")),s.push(e[a].videosWithStrength.join(",")),s.push(e[a].root),s.push(e[a].leaf),t.push(s)}var r={values:t};const o=clearSpreadsheet("Stats","Category Stats").then(e=>updateSheetData("Stats","Category Stats",r));return o}function saveCategoryYearlyStatsToSheets(e,t){var a=sheetNameToId("Stats"),s={spreadsheetId:a,range:"Category Views By Year"};return gapi.client.sheets.spreadsheets.values.get(s).then(a=>{if(a){sheetValues=a.result.values;let o=sheetValues[0],i=[];i.push(t+" Views");let n=[];n.push(t+" Number of Videos");for(let t=1;t<o.length;t++){let a=o[t],s=e[a],r=parseInt(s.views),h=parseInt(s.numVideos);i.push(r),n.push(h)}for(startingRowIndex=2*(t-2010)+1;sheetValues.length<startingRowIndex+2;)sheetValues.push([]);sheetValues[startingRowIndex]=i,sheetValues[startingRowIndex+1]=n;var s={values:sheetValues},r="Category Views By Year";updateSheetData("Stats",r,s)}}).catch(e=>{console.error("Category Views By Year Google Sheet not found",e),recordError(e)})}function saveVideoStatsToSheets(e){var t=[["Video ID","Title","Views","Likes","Dislikes","Duration (sec)","Comments","YouTube Publish Date","Categories","Created By","Organic","Strength","Average View Duration","Average View Percentage","Average Views Per Day","Days Since Published","Subscribers Gained","Likes Per View","Dislikes Per View"]];const a=lsGet("statsByVideoId");for(var s=0;s<e.length;s++){var r=e[s].videoId,o=[r,a[r].title,e[s].views,e[s].likes,e[s].dislikes,a[r].duration,e[s].comments,e[s].publishDate,a[r].categories.join(","),a[r].createdBy,a[r].organic,e[s].strength,e[s].avgViewDuration,e[s].avgViewPercentage,e[s].avgViewsPerDay,e[s].daysSincePublished,e[s].subscribersGained,e[s].likesPerView,e[s].dislikesPerView];t.push(o)}const i={values:t},n=clearSpreadsheet("Stats","Video Stats").then(e=>updateSheetData("Stats","Video Stats",i));return n}function saveGraphDataToSheets(e,t){var a=!1;if(null==e){e=lsGet("graphData");a=!0}t=t||"Graph Data";var s=[["Graph ID","Data","Layout","Config","Graph Height","Graph Width","Automargin"]];for(var r in e)if(e.hasOwnProperty(r)){var o=[];o.push(r),o.push(JSON.stringify(e[r].data)),o.push(JSON.stringify(e[r].layout)),o.push(JSON.stringify(e[r].config)),o.push(e[r].graphHeight),o.push(e[r].graphWidth),o.push(JSON.stringify(e[r].automargin)),s.push(o)}const i={values:s};clearSpreadsheet("Stats",t).then(e=>updateSheetData("Stats",t,i));a&&localStorage.removeItem("graphData")}function saveTopVideoStatsToSheets(e){var t=[["Video ID","Dashboard ID","Title","Duration","Publish Date","Thumbnail","Views","Subscribers Gained","Average View Duration","Estimated Minutes Watched","Comments","Likes","Dislikes"]];for(const s in e)if(e.hasOwnProperty(s)){const r=e[s];var a=[];a.push(s),a.push(r.dashboardId),a.push(r.title),a.push(r.duration),a.push(r.publishDate),a.push(r.thumbnail),a.push(r.views),a.push(r.subscribersGained),a.push(r.avgViewDuration),a.push(r.minutesWatched),a.push(r.comments),a.push(r.likes),a.push(r.dislikes),t.push(a)}const s={values:t},r=updateSheetData("Stats","Top Video Stats",s);return r}function saveRealTimeStatsToSheets(e){var t=[["Time Range","Views","Estimated Minutes Watched","Average View Duration","Subscribers Gained"]];for(const s in e)if(e.hasOwnProperty(s)){var a=[];a.push(s),a.push(e[s].views),a.push(e[s].estimatedMinutesWatched),a.push(e[s].averageViewDuration),a.push(e[s].netSubscribersGained),t.push(a)}const s={values:t},r=updateSheetData("Stats","Real Time Stats",s);return r}function saveVideographerStatsToSheets(e=lsGet("videographers")){let t=["Label","avgComments","avgDislikes","avgDuration","avgLikeRatio","avgLikes","avgSubsGained","avgViewPercentage","avgViewPercentageLastXDays","avgViews","cumLikeRatio","minWatched","minWatchedLastXDays","numVideos","numVideosLastXDays","totalComments","totalDislikes","totalDuration","totalLikeRatio","totalLikes","totalSubsGained","totalViews"],a=[t];for(const s in e)if(e.hasOwnProperty(s)){const r=e[s];for(const e in r)if(r.hasOwnProperty(e)){const o=r[e],i=s+"-"+e;let n=[i];for(let e=1;e<t.length;e++){const a=t[e];n.push(o[a])}a.push(n)}}const s={values:a},r=updateSheetData("Stats","Videographer Stats",s);return r}function saveVideographerViewsToSheets(e){let t=[],a={},s=Object.keys(e);s.sort(),s.forEach(s=>{const r=e[s];for(const e in r)if(r.hasOwnProperty(e)){const o=r[e].monthlyViews,i=s+"-"+e;t.push(i);for(const e in o)if(o.hasOwnProperty(e)){const t=o[e];a[e]||(a[e]={}),a[e][i]=t}}});let r=[];for(const e in a)if(a.hasOwnProperty(e)){const s=a[e];let o=[e];t.forEach(e=>{const t=s[e];o.push(t)}),r.push(o)}r.sort(function(e,t){return new Date(e[0])-new Date(t[0])}),t.unshift("Month"),r.unshift(t);const o={values:r},i=clearSpreadsheet("Stats","Category Stats").then(e=>updateSheetData("Stats","Videographer Monthly Views",o));return i}function getCardPerformanceForCurrMonth(){const[e,t,a]=getCurrMonth(),s=requestCardPerformance(e,t,a);return s.then(e=>{const t={values:[e]},s=3+monthDiff(new Date(2017,9),new Date(a)),r="Card Performance!A"+s;return updateSheetData("Stats",r,t)})}function getTopTenVideosForCurrMonth(){const[e,t,a]=getCurrMonth(),s=requestMostWatchedVideos(e,t,20,a);return s.then(e=>{const t={values:e},s=3+monthDiff(new Date(2010,6),new Date(a)),r="Top Ten Videos!A"+s;return updateSheetData("Stats",r,t).then(e=>"Updated Top Ten Video Sheet")})}function getVideographerViewsForCurrMonth(){const[e,t,a]=getCurrMonth(),s=lsGet("videographers");return requestVideographerViewsForMonth(s,e).then(e=>saveVideographerViewsToSheets(e))}async function getVideographerViewsForAllMonths(){isUpdating=!0;let e="2010-07-01";const t=new Date;let a=[];for(;t-new Date(e)>=3456e5;){a.push(e);let t=new Date(e);e=getYouTubeDateFormat(new Date(t.getUTCFullYear(),t.getUTCMonth()+1,t.getUTCDate()))}try{let e=lsGet("videographers"),t=0;for(const s of a)console.log(s),e=await requestVideographerViewsForMonth(e,s),t++,t%10==0&&saveVideographerViewsToSheets(e),await delay(8e3);saveVideographerViewsToSheets(e)}catch(e){const t="Unable to get videographer monthly views for all months: ";recordError(e,t)}finally{isUpdating=!1}}