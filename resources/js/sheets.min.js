function recordYearlyCategoryViews(e){let t=lsGet("categoryStats"),a={},s=[];for(var r=1;r<e.length;r+=2){let t=e[r][0].substr(0,4);s.push(t)}a.years=s;let i=new Array(s.length).fill(0);for(var n=1;n<e[0].length;n++){let s=e[0][n],u=!1;for(var o=0;0==u&&o<t.length;)t[o].categoryId==s&&(u=t[o]),o++;let h=u.root;if(h&&"A"!=s){let t=[],o=[],h=[],p=[];for(r=1;r<e.length;r+=2){let a=parseInt(e[r][n]),s=parseInt(e[r+1][n]);t.push(a);let u=0;1!=r&&(u=parseInt(h[(r-1)/2-1]));let l=u+a;h.push(l);let d=0,g=0;0!=s&&(d=(a/s).toFixed(0),g=(l/s).toFixed(0)),o.push(d),p.push(g),i[(r-1)/2]+=parseInt(a)}a[s]={name:u.shortName,viewTrace:t,avgViewTrace:o,cumulativeViews:h,cumulativeAvgViewTrace:p}}}return a.totals=i,a}function saveCategoryStatsToSheets(e){for(var t=[["Category ID","Name","Short Name","Views","Likes","Duration (sec)","Strength","Average Video Views","Average Video Likes","Average Video Duration","Videos","Root","Leaf"]],a=0;a<e.length;a++){var s=[];s.push(e[a].categoryId),s.push(e[a].name),s.push(e[a].shortName),s.push(e[a].views),s.push(e[a].likes),s.push(e[a].duration),s.push(e[a].avgStrength),s.push(e[a].avgViews),s.push(e[a].avgLikes),s.push(e[a].avgDuration),s.push(e[a].videos.join(",")),s.push(e[a].root),s.push(e[a].leaf),t.push(s)}var r={values:t};const i=clearSpreadsheet("Stats","Category Stats").then(e=>updateSheetData("Stats","Category Stats",r));return i}function saveCategoryYearlyStatsToSheets(e,t){var a=sheetNameToId("Stats"),s={spreadsheetId:a,range:"Category Views By Year"};return gapi.client.sheets.spreadsheets.values.get(s).then(a=>{if(a){sheetValues=a.result.values;let i=sheetValues[0],n=[];n.push(t+" Views");let o=[];o.push(t+" Number of Videos");for(let t=1;t<i.length;t++){let a=i[t],s=e[a],r=parseInt(s.views),u=parseInt(s.numVideos);n.push(r),o.push(u)}for(startingRowIndex=2*(t-2010)+1;sheetValues.length<startingRowIndex+2;)sheetValues.push([]);sheetValues[startingRowIndex]=n,sheetValues[startingRowIndex+1]=o;var s={values:sheetValues},r="Category Views By Year";updateSheetData("Stats",r,s)}}).catch(e=>{console.error("Category Views By Year Google Sheet not found",e),recordError(e)})}function saveVideoStatsToSheets(e){var t=[["Video ID","Title","Views","Likes","Dislikes","Duration (sec)","Comments","YouTube Publish Date","Categories","Created By","Strength","Average View Duration","Average View Percentage","Average Views Per Day","Days Since Published","Subscribers Gained","Likes Per View","Dislikes Per View"]];const a=lsGet("statsByVideoId");for(var s=0;s<e.length;s++){var r=e[s].videoId,i=[r,a[r].title,e[s].views,e[s].likes,e[s].dislikes,a[r].duration,e[s].comments,e[s].publishDate,a[r].categories.join(","),a[r].createdBy,e[s].strength,e[s].avgViewDuration,e[s].avgViewPercentage,e[s].avgViewsPerDay,e[s].daysSincePublished,e[s].subscribersGained,e[s].likesPerView,e[s].dislikesPerView];t.push(i)}const n={values:t},o=clearSpreadsheet("Stats","Video Stats").then(e=>updateSheetData("Stats","Video Stats",n));return o}function saveGraphDataToSheets(e,t){var a=!1;if(null==e){e=lsGet("graphData");a=!0}t=t||"Graph Data";var s=[["Graph ID","Data","Layout","Config","Graph Height","Graph Width","Automargin"]];for(var r in e)if(e.hasOwnProperty(r)){var i=[];i.push(r),i.push(JSON.stringify(e[r].data)),i.push(JSON.stringify(e[r].layout)),i.push(JSON.stringify(e[r].config)),i.push(e[r].graphHeight),i.push(e[r].graphWidth),i.push(JSON.stringify(e[r].automargin)),s.push(i)}const n={values:s};clearSpreadsheet("Stats",t).then(e=>updateSheetData("Stats",t,n));a&&localStorage.removeItem("graphData")}function saveTopVideoStatsToSheets(e){var t=[["Video ID","Dashboard ID","Title","Duration","Publish Date","Thumbnail","Views","Subscribers Gained","Average View Duration","Estimated Minutes Watched","Comments","Likes","Dislikes"]];for(const s in e)if(e.hasOwnProperty(s)){const r=e[s];var a=[];a.push(s),a.push(r.dashboardId),a.push(r.title),a.push(r.duration),a.push(r.publishDate),a.push(r.thumbnail),a.push(r.views),a.push(r.subscribersGained),a.push(r.avgViewDuration),a.push(r.minutesWatched),a.push(r.comments),a.push(r.likes),a.push(r.dislikes),t.push(a)}const s={values:t},r=updateSheetData("Stats","Top Video Stats",s);return r}function saveRealTimeStatsToSheets(e){var t=[["Time Range","Views","Estimated Minutes Watched","Average View Duration","Subscribers Gained"]];for(const s in e)if(e.hasOwnProperty(s)){var a=[];a.push(s),a.push(e[s].views),a.push(e[s].estimatedMinutesWatched),a.push(e[s].averageViewDuration),a.push(e[s].netSubscribersGained),t.push(a)}const s={values:t},r=updateSheetData("Stats","Real Time Stats",s);return r}function getCardPerformanceForCurrMonth(){const[e,t,a]=getCurrMonth(),s=requestCardPerformance(e,t,a);return s.then(e=>{const t={values:[e]},s=3+monthDiff(new Date(2017,9),new Date(a)),r="Card Performance!A"+s;return updateSheetData("Stats",r,t)})}function getTopTenVideosForCurrMonth(){const[e,t,a]=getCurrMonth(),s=requestMostWatchedVideos(e,t,20,a);return s.then(e=>{const t={values:e},s=3+monthDiff(new Date(2010,6),new Date(a)),r="Top Ten Videos!A"+s;return updateSheetData("Stats",r,t).then(e=>"Updated Top Ten Video Sheet")})}